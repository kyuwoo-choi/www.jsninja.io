const javascriptMDN: { [index: string]: string } = {
  Array: 'Global_Objects/Array',
  ArrayBuffer: 'Global_Objects/ArrayBuffer',
  AsyncFunction: 'Global_Objects/AsyncFunction',
  Atomics: 'Global_Objects/Atomics',
  Boolean: 'Global_Objects/Boolean',
  DataView: 'Global_Objects/DataView',
  Date: 'Global_Objects/Date',
  Error: 'Global_Objects/Error',
  EvalError: 'Global_Objects/EvalError',
  Float32Array: 'Global_Objects/Float32Array',
  Float64Array: 'Global_Objects/Float64Array',
  Function: 'Global_Objects/Function',
  Generator: 'Global_Objects/Generator',
  GeneratorFunction: 'Global_Objects/GeneratorFunction',
  Infinity: 'Global_Objects/Infinity',
  Int16Array: 'Global_Objects/Int16Array',
  Int32Array: 'Global_Objects/Int32Array',
  Int8Array: 'Global_Objects/Int8Array',
  InternalError: 'Global_Objects/InternalError',
  Intl: 'Global_Objects/Intl',
  'Intl.Collator': 'Global_Objects/Collator',
  'Intl.DateTimeFormat': 'Global_Objects/DateTimeFormat',
  'Intl.NumberFormat': 'Global_Objects/NumberFormat',
  JSON: 'Global_Objects/JSON',
  Map: 'Global_Objects/Map',
  Math: 'Global_Objects/Math',
  NaN: 'Global_Objects/NaN',
  Number: 'Global_Objects/Number',
  Object: 'Global_Objects/Object',
  Promise: 'Global_Objects/Promise',
  Proxy: 'Global_Objects/Proxy',
  RangeError: 'Global_Objects/RangeError',
  ReferenceError: 'Global_Objects/ReferenceError',
  Reflect: 'Global_Objects/Reflect',
  RegExp: 'Global_Objects/RegExp',
  SIMD: 'Global_Objects/SIMD',
  'SIMD.Bool16x8': 'Global_Objects/Bool16x8',
  'SIMD.Bool32x4': 'Global_Objects/Bool32x4',
  'SIMD.Bool64x2': 'Global_Objects/Bool64x2',
  'SIMD.Bool8x16': 'Global_Objects/Bool8x16',
  'SIMD.Float32x4': 'Global_Objects/Float32x4',
  'SIMD.Float64x2': 'Global_Objects/Float64x2',
  'SIMD.Int16x8': 'Global_Objects/Int16x8',
  'SIMD.Int32x4': 'Global_Objects/Int32x4',
  'SIMD.Int8x16': 'Global_Objects/Int8x16',
  'SIMD.Uint16x8': 'Global_Objects/Uint16x8',
  'SIMD.Uint32x4': 'Global_Objects/Uint32x4',
  'SIMD.Uint8x16': 'Global_Objects/Uint8x16',
  Set: 'Global_Objects/Set',
  SharedArrayBuffer: 'Global_Objects/SharedArrayBuffer',
  String: 'Global_Objects/String',
  Symbol: 'Global_Objects/Symbol',
  SyntaxError: 'Global_Objects/SyntaxError',
  TypeError: 'Global_Objects/TypeError',
  TypedArray: 'Global_Objects/TypedArray',
  URIError: 'Global_Objects/URIError',
  Uint16Array: 'Global_Objects/Uint16Array',
  Uint32Array: 'Global_Objects/Uint32Array',
  Uint8Array: 'Global_Objects/Uint8Array',
  Uint8ClampedArray: 'Global_Objects/Uint8ClampedArray',
  WeakMap: 'Global_Objects/WeakMap',
  WeakSet: 'Global_Objects/WeakSet',
  WebAssembly: 'Global_Objects/WebAssembly',
  'decodeURI()': 'Global_Objects/decodeURI',
  'decodeURIComponent()': 'Global_Objects/decodeURIComponent',
  'encodeURI()': 'Global_Objects/encodeURI',
  'encodeURIComponent()': 'Global_Objects/encodeURIComponent',
  'escape()': 'Global_Objects/escape',
  'eval()': 'Global_Objects/eval',
  'isFinite()': 'Global_Objects/isFinite',
  'isNaN()': 'Global_Objects/isNaN',
  null: 'Global_Objects/null',
  'parseFloat()': 'Global_Objects/parseFloat',
  'parseInt()': 'Global_Objects/parseInt',
  undefined: 'Global_Objects/undefined',
  'unescape()': 'Global_Objects/unescape',
  'uneval()': 'Global_Objects/uneval',
  'Arithmetic operators': 'Operators/Arithmetic_Operators',
  'Array comprehensions': 'Operators/Array_comprehensions',
  'Assignment operators': 'Operators/Assignment_Operators',
  'Bitwise operators': 'Operators/Bitwise_Operators',
  'Comma operator': 'Operators/Comma_Operator',
  'Comparison operators': 'Operators/Comparison_Operators',
  'Conditional (ternary) Operator': 'Operators/Conditional_Operator',
  'Destructuring assignment': 'Operators/Destructuring_assignment',
  'Expression closures': 'Operators/Expression_closures',
  'Generator comprehensions': 'Operators/Generator_comprehensions',
  'Grouping operator': 'Operators/Grouping',
  'Legacy generator function expression': 'Operators/Legacy_generator_function',
  'Logical Operators': 'Operators/Logical_Operators',
  'Object initializer': 'Operators/Object_initializer',
  'Operator precedence': 'Operators/Operator_Precedence',
  'Property accessors': 'Operators/Property_Accessors',
  'Spread syntax': 'Operators/Spread_operator',
  'async function expression': 'Operators/async_function',
  await: 'Operators/await',
  'class expression': 'Operators/class',
  'delete operator': 'Operators/delete',
  'function expression': 'Operators/function',
  'function* expression': 'Operators/function*',
  'in operator': 'Operators/in',
  instanceof: 'Operators/instanceof',
  'new operator': 'Operators/new',
  'new.target': 'Operators/new.target',
  super: 'Operators/super',
  this: 'Operators/this',
  typeof: 'Operators/typeof',
  'void operator': 'Operators/void',
  yield: 'Operators/yield',
  'yield*': 'Operators/yield*',
  'Legacy generator function': 'Statements/Legacy_generator_function',
  'async function': 'Statements/async_function',
  block: 'Statements/block',
  break: 'Statements/break',
  class: 'Statements/class',
  const: 'Statements/const',
  continue: 'Statements/continue',
  debugger: 'Statements/debugger',
  default: 'Statements/default',
  'do...while': 'Statements/do...while',
  empty: 'Statements/Empty',
  export: 'Statements/export',
  for: 'Statements/for',
  'for each...in': 'Statements/for_each...in',
  'for...in': 'Statements/for...in',
  'for...of': 'Statements/for...of',
  'function declaration': 'Statements/function',
  'function*': 'Statements/function*',
  'if...else': 'Statements/if...else',
  import: 'Statements/import',
  label: 'Statements/label',
  let: 'Statements/let',
  return: 'Statements/return',
  switch: 'Statements/switch',
  throw: 'Statements/throw',
  'try...catch': 'Statements/try...catch',
  var: 'Statements/var',
  while: 'Statements/while',
  with: 'Statements/with',
  'Arguments object': 'Functions/arguments',
  'Arrow functions': 'Functions/Arrow_functions',
  'Default parameters': 'Functions/Default_parameters',
  'Method definitions': 'Functions/Method_definitions',
  'Rest parameters': 'Functions/rest_parameters',
  getter: 'Functions/get',
  setter: 'Functions/set',
  constructor: 'Classes/constructor',
  extends: 'Classes/extends',
  static: 'Classes/static',
  'AsyncFunction.prototype': 'Global_Objects/AsyncFunction/prototype',
  'EvalError.prototype': 'Global_Objects/EvalError/prototype',
  'EvalError.prototype.message': 'Global_Objects/Error/message',
  'EvalError.prototype.name': 'Global_Objects/Error/name',
  'EvalError.prototype.fileName': 'Global_Objects/Error/fileName',
  'EvalError.prototype.lineNumber': 'Global_Objects/Error/lineNumber',
  'EvalError.prototype.columnNumber': 'Global_Objects/Error/columnNumber',
  'EvalError.prototype.stack': 'Global_Objects/Error/stack',
  'get Array[@@species]': 'Global_Objects/Array/@@species',
  'Array.prototype': 'Global_Objects/Array/prototype',
  'Array.from()': 'Global_Objects/Array/from',
  'Array.isArray()': 'Global_Objects/Array/isArray',
  'Array.of()': 'Global_Objects/Array/of',
  'Array.prototype.length': 'Global_Objects/Array/length',
  'Array.prototype[@@unscopables]': 'Global_Objects/Array/@@unscopables',
  'Array.prototype.copyWithin()': 'Global_Objects/Array/copyWithin',
  'Array.prototype.fill()': 'Global_Objects/Array/fill',
  'Array.prototype.pop()': 'Global_Objects/Array/pop',
  'Array.prototype.push()': 'Global_Objects/Array/push',
  'Array.prototype.reverse()': 'Global_Objects/Array/reverse',
  'Array.prototype.shift()': 'Global_Objects/Array/shift',
  'Array.prototype.sort()': 'Global_Objects/Array/sort',
  'Array.prototype.splice()': 'Global_Objects/Array/splice',
  'Array.prototype.unshift()': 'Global_Objects/Array/unshift',
  'Array.prototype.concat()': 'Global_Objects/Array/concat',
  'Array.prototype.includes()': 'Global_Objects/Array/includes',
  'Array.prototype.indexOf()': 'Global_Objects/Array/indexOf',
  'Array.prototype.join()': 'Global_Objects/Array/join',
  'Array.prototype.lastIndexOf()': 'Global_Objects/Array/lastIndexOf',
  'Array.prototype.slice()': 'Global_Objects/Array/slice',
  'Array.prototype.toSource()': 'Global_Objects/Array/toSource',
  'Array.prototype.toString()': 'Global_Objects/Array/toString',
  'Array.prototype.toLocaleString()': 'Global_Objects/Array/toLocaleString',
  'Array.prototype.entries()': 'Global_Objects/Array/entries',
  'Array.prototype.every()': 'Global_Objects/Array/every',
  'Array.prototype.filter()': 'Global_Objects/Array/filter',
  'Array.prototype.find()': 'Global_Objects/Array/find',
  'Array.prototype.findIndex()': 'Global_Objects/Array/findIndex',
  'Array.prototype.forEach()': 'Global_Objects/Array/forEach',
  'Array.prototype.keys()': 'Global_Objects/Array/keys',
  'Array.prototype.map()': 'Global_Objects/Array/map',
  'Array.prototype.reduce()': 'Global_Objects/Array/reduce',
  'Array.prototype.reduceRight()': 'Global_Objects/Array/reduceRight',
  'Array.prototype.some()': 'Global_Objects/Array/some',
  'Array.prototype.values()': 'Global_Objects/Array/values',
  'Array.prototype[@@iterator]()': 'Global_Objects/Array/@@iterator',
  'DataView.prototype.buffer': 'Global_Objects/DataView/buffer',
  'DataView.prototype.byteLength': 'Global_Objects/DataView/byteLength',
  'DataView.prototype.byteOffset': 'Global_Objects/DataView/byteOffset',
  'DataView.prototype.getInt8()': 'Global_Objects/DataView/getInt8',
  'DataView.prototype.getUint8()': 'Global_Objects/DataView/getUint8',
  'DataView.prototype.getInt16()': 'Global_Objects/DataView/getInt16',
  'DataView.prototype.getUint16()': 'Global_Objects/DataView/getUint16',
  'DataView.prototype.getInt32()': 'Global_Objects/DataView/getInt32',
  'DataView.prototype.getUint32()': 'Global_Objects/DataView/getUint32',
  'DataView.prototype.getFloat32()': 'Global_Objects/DataView/getFloat32',
  'DataView.prototype.getFloat64()': 'Global_Objects/DataView/getFloat64',
  'DataView.prototype.setInt8()': 'Global_Objects/DataView/setInt8',
  'DataView.prototype.setUint8()': 'Global_Objects/DataView/setUint8',
  'DataView.prototype.setInt16()': 'Global_Objects/DataView/setInt16',
  'DataView.prototype.setUint16()': 'Global_Objects/DataView/setUint16',
  'DataView.prototype.setInt32()': 'Global_Objects/DataView/setInt32',
  'DataView.prototype.setUint32()': 'Global_Objects/DataView/setUint32',
  'DataView.prototype.setFloat32()': 'Global_Objects/DataView/setFloat32',
  'DataView.prototype.setFloat64()': 'Global_Objects/DataView/setFloat64',
  'get ArrayBuffer[@@species]': 'Global_Objects/ArrayBuffer/@@species',
  'ArrayBuffer.prototype': 'Global_Objects/ArrayBuffer/prototype',
  'ArrayBuffer.isView(arg)': 'Global_Objects/ArrayBuffer/isView',
  'ArrayBuffer.transfer(oldBuffer [, newByteLength])':
    'Global_Objects/ArrayBuffer/transfer',
  'ArrayBuffer.prototype.byteLength': 'Global_Objects/ArrayBuffer/byteLength',
  'ArrayBuffer.prototype.slice()': 'Global_Objects/ArrayBuffer/slice',
  'ArrayBuffer.slice()': 'Global_Objects/ArrayBuffer/slice',
  'Atomics.add()': 'Global_Objects/Atomics/add',
  'Atomics.and()': 'Global_Objects/Atomics/and',
  'Atomics.compareExchange()': 'Global_Objects/Atomics/compareExchange',
  'Atomics.exchange()': 'Global_Objects/Atomics/exchange',
  'Atomics.load()': 'Global_Objects/Atomics/load',
  'Atomics.or()': 'Global_Objects/Atomics/or',
  'Atomics.store()': 'Global_Objects/Atomics/store',
  'Atomics.sub()': 'Global_Objects/Atomics/sub',
  'Atomics.xor()': 'Global_Objects/Atomics/xor',
  'Atomics.wait()': 'Global_Objects/Atomics/wait',
  'Atomics.wake()': 'Global_Objects/Atomics/wake',
  'Atomics.isLockFree(size)': 'Global_Objects/Atomics/isLockFree',
  'Boolean.prototype': 'Global_Objects/Boolean/prototype',
  'Boolean.prototype.toSource()': 'Global_Objects/Boolean/toSource',
  'Boolean.prototype.toString()': 'Global_Objects/Boolean/toString',
  'Boolean.prototype.valueOf()': 'Global_Objects/Boolean/valueOf',
  'Error.prototype': 'Global_Objects/Error/prototype',
  'Error.prototype.message': 'Global_Objects/Error/message',
  'Error.prototype.name': 'Global_Objects/Error/name',
  'Error.prototype.description': 'Global_Objects/Error/description',
  'Error.prototype.number': 'Global_Objects/Error/number',
  'Error.prototype.fileName': 'Global_Objects/Error/fileName',
  'Error.prototype.lineNumber': 'Global_Objects/Error/lineNumber',
  'Error.prototype.columnNumber': 'Global_Objects/Error/columnNumber',
  'Error.prototype.stack': 'Global_Objects/Error/stack',
  'Error.prototype.toSource()': 'Global_Objects/Error/toSource',
  'Error.prototype.toString()': 'Global_Objects/Error/toString',
  'Float32Array.BYTES_PER_ELEMENT':
    'Global_Objects/TypedArray/BYTES_PER_ELEMENT',
  'Float32Array.name': 'Global_Objects/TypedArray/name',
  'Float32Array.prototype': 'Global_Objects/TypedArray/prototype',
  'Float32Array.from()': 'Global_Objects/TypedArray/from',
  'Float32Array.of()': 'Global_Objects/TypedArray/of',
  'Float32Array.prototype.buffer': 'Global_Objects/TypedArray/buffer',
  'Float32Array.prototype.byteLength': 'Global_Objects/TypedArray/byteLength',
  'Float32Array.prototype.byteOffset': 'Global_Objects/TypedArray/byteOffset',
  'Float32Array.prototype.length': 'Global_Objects/TypedArray/length',
  'Float32Array.prototype.copyWithin()': 'Global_Objects/TypedArray/copyWithin',
  'Float32Array.prototype.entries()': 'Global_Objects/TypedArray/entries',
  'Float32Array.prototype.every()': 'Global_Objects/TypedArray/every',
  'Float32Array.prototype.fill()': 'Global_Objects/TypedArray/fill',
  'Float32Array.prototype.filter()': 'Global_Objects/TypedArray/filter',
  'Float32Array.prototype.find()': 'Global_Objects/TypedArray/find',
  'Float32Array.prototype.findIndex()': 'Global_Objects/TypedArray/findIndex',
  'Float32Array.prototype.forEach()': 'Global_Objects/TypedArray/forEach',
  'Float32Array.prototype.includes()': 'Global_Objects/TypedArray/includes',
  'Float32Array.prototype.indexOf()': 'Global_Objects/TypedArray/indexOf',
  'Float32Array.prototype.join()': 'Global_Objects/TypedArray/join',
  'Float32Array.prototype.keys()': 'Global_Objects/TypedArray/keys',
  'Float32Array.prototype.lastIndexOf()':
    'Global_Objects/TypedArray/lastIndexOf',
  'Float32Array.prototype.map()': 'Global_Objects/TypedArray/map',
  'Float32Array.prototype.move()': 'Global_Objects/TypedArray/move',
  'Float32Array.prototype.reduce()': 'Global_Objects/TypedArray/reduce',
  'Float32Array.prototype.reduceRight()':
    'Global_Objects/TypedArray/reduceRight',
  'Float32Array.prototype.reverse()': 'Global_Objects/TypedArray/reverse',
  'Float32Array.prototype.set()': 'Global_Objects/TypedArray/set',
  'Float32Array.prototype.slice()': 'Global_Objects/TypedArray/slice',
  'Float32Array.prototype.some()': 'Global_Objects/TypedArray/some',
  'Float32Array.prototype.sort()': 'Global_Objects/TypedArray/sort',
  'Float32Array.prototype.subarray()': 'Global_Objects/TypedArray/subarray',
  'Float32Array.prototype.values()': 'Global_Objects/TypedArray/values',
  'Float32Array.prototype.toLocaleString()':
    'Global_Objects/TypedArray/toLocaleString',
  'Float32Array.prototype.toString()': 'Global_Objects/TypedArray/toString',
  'Float32Array.prototype[@@iterator]()':
    'Global_Objects/TypedArray/@@iterator',
  'Date.prototype': 'Global_Objects/Date/prototype',
  'Date.now()': 'Global_Objects/Date/now',
  'Date.parse()': 'Global_Objects/Date/parse',
  'Date.UTC()': 'Global_Objects/Date/UTC',
  'Date.prototype.getDate()': 'Global_Objects/Date/getDate',
  'Date.prototype.getDay()': 'Global_Objects/Date/getDay',
  'Date.prototype.getFullYear()': 'Global_Objects/Date/getFullYear',
  'Date.prototype.getHours()': 'Global_Objects/Date/getHours',
  'Date.prototype.getMilliseconds()': 'Global_Objects/Date/getMilliseconds',
  'Date.prototype.getMinutes()': 'Global_Objects/Date/getMinutes',
  'Date.prototype.getMonth()': 'Global_Objects/Date/getMonth',
  'Date.prototype.getSeconds()': 'Global_Objects/Date/getSeconds',
  'Date.prototype.getTime()': 'Global_Objects/Date/getTime',
  'Date.prototype.getTimezoneOffset()': 'Global_Objects/Date/getTimezoneOffset',
  'Date.prototype.getUTCDate()': 'Global_Objects/Date/getUTCDate',
  'Date.prototype.getUTCDay()': 'Global_Objects/Date/getUTCDay',
  'Date.prototype.getUTCFullYear()': 'Global_Objects/Date/getUTCFullYear',
  'Date.prototype.getUTCHours()': 'Global_Objects/Date/getUTCHours',
  'Date.prototype.getUTCMilliseconds()':
    'Global_Objects/Date/getUTCMilliseconds',
  'Date.prototype.getUTCMinutes()': 'Global_Objects/Date/getUTCMinutes',
  'Date.prototype.getUTCMonth()': 'Global_Objects/Date/getUTCMonth',
  'Date.prototype.getUTCSeconds()': 'Global_Objects/Date/getUTCSeconds',
  'Date.prototype.getYear()': 'Global_Objects/Date/getYear',
  'Date.prototype.setDate()': 'Global_Objects/Date/setDate',
  'Date.prototype.setFullYear()': 'Global_Objects/Date/setFullYear',
  'Date.prototype.setHours()': 'Global_Objects/Date/setHours',
  'Date.prototype.setMilliseconds()': 'Global_Objects/Date/setMilliseconds',
  'Date.prototype.setMinutes()': 'Global_Objects/Date/setMinutes',
  'Date.prototype.setMonth()': 'Global_Objects/Date/setMonth',
  'Date.prototype.setSeconds()': 'Global_Objects/Date/setSeconds',
  'Date.prototype.setTime()': 'Global_Objects/Date/setTime',
  'Date.prototype.setUTCDate()': 'Global_Objects/Date/setUTCDate',
  'Date.prototype.setUTCFullYear()': 'Global_Objects/Date/setUTCFullYear',
  'Date.prototype.setUTCHours()': 'Global_Objects/Date/setUTCHours',
  'Date.prototype.setUTCMilliseconds()':
    'Global_Objects/Date/setUTCMilliseconds',
  'Date.prototype.setUTCMinutes()': 'Global_Objects/Date/setUTCMinutes',
  'Date.prototype.setUTCMonth()': 'Global_Objects/Date/setUTCMonth',
  'Date.prototype.setUTCSeconds()': 'Global_Objects/Date/setUTCSeconds',
  'Date.prototype.setYear()': 'Global_Objects/Date/setYear',
  'Date.prototype.toDateString()': 'Global_Objects/Date/toDateString',
  'Date.prototype.toISOString()': 'Global_Objects/Date/toISOString',
  'Date.prototype.toJSON()': 'Global_Objects/Date/toJSON',
  'Date.prototype.toGMTString()': 'Global_Objects/Date/toGMTString',
  'Date.prototype.toLocaleDateString()':
    'Global_Objects/Date/toLocaleDateString',
  'Date.prototype.toLocaleFormat()': 'Global_Objects/Date/toLocaleFormat',
  'Date.prototype.toLocaleString()': 'Global_Objects/Date/toLocaleString',
  'Date.prototype.toLocaleTimeString()':
    'Global_Objects/Date/toLocaleTimeString',
  'Date.prototype.toSource()': 'Global_Objects/Date/toSource',
  'Date.prototype.toString()': 'Global_Objects/Date/toString',
  'Date.prototype.toTimeString()': 'Global_Objects/Date/toTimeString',
  'Date.prototype.toUTCString()': 'Global_Objects/Date/toUTCString',
  'Date.prototype.valueOf()': 'Global_Objects/Date/valueOf',
  'Function.arguments': 'Global_Objects/Function/arguments',
  'Function.arity': 'Global_Objects/Function/arity',
  'Function.caller': 'Global_Objects/Function/caller',
  'Function.length': 'Global_Objects/Function/length',
  'Function.name': 'Global_Objects/Function/name',
  'Function.displayName': 'Global_Objects/Function/displayName',
  'Function.prototype.apply()': 'Global_Objects/Function/apply',
  'Function.prototype.bind()': 'Global_Objects/Function/bind',
  'Function.prototype.call()': 'Global_Objects/Function/call',
  'Function.prototype.isGenerator()': 'Global_Objects/Function/isGenerator',
  'Function.prototype.toSource()': 'Global_Objects/Function/toSource',
  'Function.prototype.toString()': 'Global_Objects/Function/toString',
  'GeneratorFunction.prototype': 'Global_Objects/GeneratorFunction/prototype',
  'Float64Array.BYTES_PER_ELEMENT':
    'Global_Objects/TypedArray/BYTES_PER_ELEMENT',
  'Float64Array.name': 'Global_Objects/TypedArray/name',
  'Float64Array.prototype': 'Global_Objects/TypedArray/prototype',
  'Float64Array.from()': 'Global_Objects/TypedArray/from',
  'Float64Array.of()': 'Global_Objects/TypedArray/of',
  'Float64Array.prototype.buffer': 'Global_Objects/TypedArray/buffer',
  'Float64Array.prototype.byteLength': 'Global_Objects/TypedArray/byteLength',
  'Float64Array.prototype.byteOffset': 'Global_Objects/TypedArray/byteOffset',
  'Float64Array.prototype.length': 'Global_Objects/TypedArray/length',
  'Float64Array.prototype.copyWithin()': 'Global_Objects/TypedArray/copyWithin',
  'Float64Array.prototype.entries()': 'Global_Objects/TypedArray/entries',
  'Float64Array.prototype.every()': 'Global_Objects/TypedArray/every',
  'Float64Array.prototype.fill()': 'Global_Objects/TypedArray/fill',
  'Float64Array.prototype.filter()': 'Global_Objects/TypedArray/filter',
  'Float64Array.prototype.find()': 'Global_Objects/TypedArray/find',
  'Float64Array.prototype.findIndex()': 'Global_Objects/TypedArray/findIndex',
  'Float64Array.prototype.forEach()': 'Global_Objects/TypedArray/forEach',
  'Float64Array.prototype.includes()': 'Global_Objects/TypedArray/includes',
  'Float64Array.prototype.indexOf()': 'Global_Objects/TypedArray/indexOf',
  'Float64Array.prototype.join()': 'Global_Objects/TypedArray/join',
  'Float64Array.prototype.keys()': 'Global_Objects/TypedArray/keys',
  'Float64Array.prototype.lastIndexOf()':
    'Global_Objects/TypedArray/lastIndexOf',
  'Float64Array.prototype.map()': 'Global_Objects/TypedArray/map',
  'Float64Array.prototype.move()': 'Global_Objects/TypedArray/move',
  'Float64Array.prototype.reduce()': 'Global_Objects/TypedArray/reduce',
  'Float64Array.prototype.reduceRight()':
    'Global_Objects/TypedArray/reduceRight',
  'Float64Array.prototype.reverse()': 'Global_Objects/TypedArray/reverse',
  'Float64Array.prototype.set()': 'Global_Objects/TypedArray/set',
  'Float64Array.prototype.slice()': 'Global_Objects/TypedArray/slice',
  'Float64Array.prototype.some()': 'Global_Objects/TypedArray/some',
  'Float64Array.prototype.sort()': 'Global_Objects/TypedArray/sort',
  'Float64Array.prototype.subarray()': 'Global_Objects/TypedArray/subarray',
  'Float64Array.prototype.values()': 'Global_Objects/TypedArray/values',
  'Float64Array.prototype.toLocaleString()':
    'Global_Objects/TypedArray/toLocaleString',
  'Float64Array.prototype.toString()': 'Global_Objects/TypedArray/toString',
  'Float64Array.prototype[@@iterator]()':
    'Global_Objects/TypedArray/@@iterator',
  'Generator.prototype.next()': 'Global_Objects/Generator/next',
  'Generator.prototype.return()': 'Global_Objects/Generator/return',
  'Generator.prototype.throw()': 'Global_Objects/Generator/throw',
  'Intl.getCanonicalLocales()': 'Global_Objects/Intl/getCanonicalLocales',
  'InternalError.prototype': 'Global_Objects/InternalError/prototype',
  'InternalError.prototype.message': 'Global_Objects/Error/message',
  'InternalError.prototype.name': 'Global_Objects/Error/name',
  'InternalError.prototype.fileName': 'Global_Objects/Error/fileName',
  'InternalError.prototype.lineNumber': 'Global_Objects/Error/lineNumber',
  'InternalError.prototype.columnNumber': 'Global_Objects/Error/columnNumber',
  'InternalError.prototype.stack': 'Global_Objects/Error/stack',
  'Int8Array.BYTES_PER_ELEMENT': 'Global_Objects/TypedArray/BYTES_PER_ELEMENT',
  'Int8Array.name': 'Global_Objects/TypedArray/name',
  'Int8Array.prototype': 'Global_Objects/TypedArray/prototype',
  'Int8Array.from()': 'Global_Objects/TypedArray/from',
  'Int8Array.of()': 'Global_Objects/TypedArray/of',
  'Int8Array.prototype.buffer': 'Global_Objects/TypedArray/buffer',
  'Int8Array.prototype.byteLength': 'Global_Objects/TypedArray/byteLength',
  'Int8Array.prototype.byteOffset': 'Global_Objects/TypedArray/byteOffset',
  'Int8Array.prototype.length': 'Global_Objects/TypedArray/length',
  'Int8Array.prototype.copyWithin()': 'Global_Objects/TypedArray/copyWithin',
  'Int8Array.prototype.entries()': 'Global_Objects/TypedArray/entries',
  'Int8Array.prototype.every()': 'Global_Objects/TypedArray/every',
  'Int8Array.prototype.fill()': 'Global_Objects/TypedArray/fill',
  'Int8Array.prototype.filter()': 'Global_Objects/TypedArray/filter',
  'Int8Array.prototype.find()': 'Global_Objects/TypedArray/find',
  'Int8Array.prototype.findIndex()': 'Global_Objects/TypedArray/findIndex',
  'Int8Array.prototype.forEach()': 'Global_Objects/TypedArray/forEach',
  'Int8Array.prototype.includes()': 'Global_Objects/TypedArray/includes',
  'Int8Array.prototype.indexOf()': 'Global_Objects/TypedArray/indexOf',
  'Int8Array.prototype.join()': 'Global_Objects/TypedArray/join',
  'Int8Array.prototype.keys()': 'Global_Objects/TypedArray/keys',
  'Int8Array.prototype.lastIndexOf()': 'Global_Objects/TypedArray/lastIndexOf',
  'Int8Array.prototype.map()': 'Global_Objects/TypedArray/map',
  'Int8Array.prototype.move()': 'Global_Objects/TypedArray/move',
  'Int8Array.prototype.reduce()': 'Global_Objects/TypedArray/reduce',
  'Int8Array.prototype.reduceRight()': 'Global_Objects/TypedArray/reduceRight',
  'Int8Array.prototype.reverse()': 'Global_Objects/TypedArray/reverse',
  'Int8Array.prototype.set()': 'Global_Objects/TypedArray/set',
  'Int8Array.prototype.slice()': 'Global_Objects/TypedArray/slice',
  'Int8Array.prototype.some()': 'Global_Objects/TypedArray/some',
  'Int8Array.prototype.sort()': 'Global_Objects/TypedArray/sort',
  'Int8Array.prototype.subarray()': 'Global_Objects/TypedArray/subarray',
  'Int8Array.prototype.values()': 'Global_Objects/TypedArray/values',
  'Int8Array.prototype.toLocaleString()':
    'Global_Objects/TypedArray/toLocaleString',
  'Int8Array.prototype.toString()': 'Global_Objects/TypedArray/toString',
  'Int8Array.prototype[@@iterator]()': 'Global_Objects/TypedArray/@@iterator',
  'Int32Array.BYTES_PER_ELEMENT': 'Global_Objects/TypedArray/BYTES_PER_ELEMENT',
  'Int32Array.name': 'Global_Objects/TypedArray/name',
  'Int32Array.prototype': 'Global_Objects/TypedArray/prototype',
  'Int32Array.from()': 'Global_Objects/TypedArray/from',
  'Int32Array.of()': 'Global_Objects/TypedArray/of',
  'Int32Array.prototype.buffer': 'Global_Objects/TypedArray/buffer',
  'Int32Array.prototype.byteLength': 'Global_Objects/TypedArray/byteLength',
  'Int32Array.prototype.byteOffset': 'Global_Objects/TypedArray/byteOffset',
  'Int32Array.prototype.length': 'Global_Objects/TypedArray/length',
  'Int32Array.prototype.copyWithin()': 'Global_Objects/TypedArray/copyWithin',
  'Int32Array.prototype.entries()': 'Global_Objects/TypedArray/entries',
  'Int32Array.prototype.every()': 'Global_Objects/TypedArray/every',
  'Int32Array.prototype.fill()': 'Global_Objects/TypedArray/fill',
  'Int32Array.prototype.filter()': 'Global_Objects/TypedArray/filter',
  'Int32Array.prototype.find()': 'Global_Objects/TypedArray/find',
  'Int32Array.prototype.findIndex()': 'Global_Objects/TypedArray/findIndex',
  'Int32Array.prototype.forEach()': 'Global_Objects/TypedArray/forEach',
  'Int32Array.prototype.includes()': 'Global_Objects/TypedArray/includes',
  'Int32Array.prototype.indexOf()': 'Global_Objects/TypedArray/indexOf',
  'Int32Array.prototype.join()': 'Global_Objects/TypedArray/join',
  'Int32Array.prototype.keys()': 'Global_Objects/TypedArray/keys',
  'Int32Array.prototype.lastIndexOf()': 'Global_Objects/TypedArray/lastIndexOf',
  'Int32Array.prototype.map()': 'Global_Objects/TypedArray/map',
  'Int32Array.prototype.move()': 'Global_Objects/TypedArray/move',
  'Int32Array.prototype.reduce()': 'Global_Objects/TypedArray/reduce',
  'Int32Array.prototype.reduceRight()': 'Global_Objects/TypedArray/reduceRight',
  'Int32Array.prototype.reverse()': 'Global_Objects/TypedArray/reverse',
  'Int32Array.prototype.set()': 'Global_Objects/TypedArray/set',
  'Int32Array.prototype.slice()': 'Global_Objects/TypedArray/slice',
  'Int32Array.prototype.some()': 'Global_Objects/TypedArray/some',
  'Int32Array.prototype.sort()': 'Global_Objects/TypedArray/sort',
  'Int32Array.prototype.subarray()': 'Global_Objects/TypedArray/subarray',
  'Int32Array.prototype.values()': 'Global_Objects/TypedArray/values',
  'Int32Array.prototype.toLocaleString()':
    'Global_Objects/TypedArray/toLocaleString',
  'Int32Array.prototype.toString()': 'Global_Objects/TypedArray/toString',
  'Int32Array.prototype[@@iterator]()': 'Global_Objects/TypedArray/@@iterator',
  'Int16Array.BYTES_PER_ELEMENT': 'Global_Objects/TypedArray/BYTES_PER_ELEMENT',
  'Int16Array.name': 'Global_Objects/TypedArray/name',
  'Int16Array.prototype': 'Global_Objects/TypedArray/prototype',
  'Int16Array.from()': 'Global_Objects/TypedArray/from',
  'Int16Array.of()': 'Global_Objects/TypedArray/of',
  'Int16Array.prototype.buffer': 'Global_Objects/TypedArray/buffer',
  'Int16Array.prototype.byteLength': 'Global_Objects/TypedArray/byteLength',
  'Int16Array.prototype.byteOffset': 'Global_Objects/TypedArray/byteOffset',
  'Int16Array.prototype.length': 'Global_Objects/TypedArray/length',
  'Int16Array.prototype.copyWithin()': 'Global_Objects/TypedArray/copyWithin',
  'Int16Array.prototype.entries()': 'Global_Objects/TypedArray/entries',
  'Int16Array.prototype.every()': 'Global_Objects/TypedArray/every',
  'Int16Array.prototype.fill()': 'Global_Objects/TypedArray/fill',
  'Int16Array.prototype.filter()': 'Global_Objects/TypedArray/filter',
  'Int16Array.prototype.find()': 'Global_Objects/TypedArray/find',
  'Int16Array.prototype.findIndex()': 'Global_Objects/TypedArray/findIndex',
  'Int16Array.prototype.forEach()': 'Global_Objects/TypedArray/forEach',
  'Int16Array.prototype.includes()': 'Global_Objects/TypedArray/includes',
  'Int16Array.prototype.indexOf()': 'Global_Objects/TypedArray/indexOf',
  'Int16Array.prototype.join()': 'Global_Objects/TypedArray/join',
  'Int16Array.prototype.keys()': 'Global_Objects/TypedArray/keys',
  'Int16Array.prototype.lastIndexOf()': 'Global_Objects/TypedArray/lastIndexOf',
  'Int16Array.prototype.map()': 'Global_Objects/TypedArray/map',
  'Int16Array.prototype.move()': 'Global_Objects/TypedArray/move',
  'Int16Array.prototype.reduce()': 'Global_Objects/TypedArray/reduce',
  'Int16Array.prototype.reduceRight()': 'Global_Objects/TypedArray/reduceRight',
  'Int16Array.prototype.reverse()': 'Global_Objects/TypedArray/reverse',
  'Int16Array.prototype.set()': 'Global_Objects/TypedArray/set',
  'Int16Array.prototype.slice()': 'Global_Objects/TypedArray/slice',
  'Int16Array.prototype.some()': 'Global_Objects/TypedArray/some',
  'Int16Array.prototype.sort()': 'Global_Objects/TypedArray/sort',
  'Int16Array.prototype.subarray()': 'Global_Objects/TypedArray/subarray',
  'Int16Array.prototype.values()': 'Global_Objects/TypedArray/values',
  'Int16Array.prototype.toLocaleString()':
    'Global_Objects/TypedArray/toLocaleString',
  'Int16Array.prototype.toString()': 'Global_Objects/TypedArray/toString',
  'Int16Array.prototype[@@iterator]()': 'Global_Objects/TypedArray/@@iterator',
  'Intl.Collator.prototype': 'Global_Objects/Collator/prototype',
  'Intl.Collator.supportedLocalesOf()':
    'Global_Objects/Collator/supportedLocalesOf',
  'Intl.Collator.prototype.compare': 'Global_Objects/Collator/compare',
  'Intl.Collator.prototype.resolvedOptions()':
    'Global_Objects/Collator/resolvedOptions',
  'Intl.DateTimeFormat.prototype': 'Global_Objects/DateTimeFormat/prototype',
  'Intl.DateTimeFormat.supportedLocalesOf()':
    'Global_Objects/DateTimeFormat/supportedLocalesOf',
  'Intl.DateTimeFormat.prototype.format':
    'Global_Objects/DateTimeFormat/format',
  'Intl.DateTimeFormat.prototype.formatToParts()':
    'Global_Objects/DateTimeFormat/formatToParts',
  'Intl.DateTimeFormat.prototype.resolvedOptions()':
    'Global_Objects/DateTimeFormat/resolvedOptions',
  'Intl.NumberFormat.prototype': 'Global_Objects/NumberFormat/prototype',
  'Intl.NumberFormat.supportedLocalesOf()':
    'Global_Objects/NumberFormat/supportedLocalesOf',
  'Intl.NumberFormat.prototype.format': 'Global_Objects/NumberFormat/format',
  'Intl.NumberFormat.prototype.resolvedOptions()':
    'Global_Objects/NumberFormat/resolvedOptions',
  'Math.E': 'Global_Objects/Math/E',
  'Math.LN2': 'Global_Objects/Math/LN2',
  'Math.LN10': 'Global_Objects/Math/LN10',
  'Math.LOG2E': 'Global_Objects/Math/LOG2E',
  'Math.LOG10E': 'Global_Objects/Math/LOG10E',
  'Math.PI': 'Global_Objects/Math/PI',
  'Math.SQRT1_2': 'Global_Objects/Math/SQRT1_2',
  'Math.SQRT2': 'Global_Objects/Math/SQRT2',
  'Math.abs(x)': 'Global_Objects/Math/abs',
  'Math.acos(x)': 'Global_Objects/Math/acos',
  'Math.acosh(x)': 'Global_Objects/Math/acosh',
  'Math.asin(x)': 'Global_Objects/Math/asin',
  'Math.asinh(x)': 'Global_Objects/Math/asinh',
  'Math.atan(x)': 'Global_Objects/Math/atan',
  'Math.atanh(x)': 'Global_Objects/Math/atanh',
  'Math.atan2(y, x)': 'Global_Objects/Math/atan2',
  'Math.cbrt(x)': 'Global_Objects/Math/cbrt',
  'Math.ceil(x)': 'Global_Objects/Math/ceil',
  'Math.clz32(x)': 'Global_Objects/Math/clz32',
  'Math.cos(x)': 'Global_Objects/Math/cos',
  'Math.cosh(x)': 'Global_Objects/Math/cosh',
  'Math.exp(x)': 'Global_Objects/Math/exp',
  'Math.expm1(x)': 'Global_Objects/Math/expm1',
  'Math.floor(x)': 'Global_Objects/Math/floor',
  'Math.fround(x)': 'Global_Objects/Math/fround',
  'Math.hypot([x[, y[, …]]])': 'Global_Objects/Math/hypot',
  'Math.imul(x, y)': 'Global_Objects/Math/imul',
  'Math.log(x)': 'Global_Objects/Math/log',
  'Math.log1p(x)': 'Global_Objects/Math/log1p',
  'Math.log10(x)': 'Global_Objects/Math/log10',
  'Math.log2(x)': 'Global_Objects/Math/log2',
  'Math.max([x[, y[, …]]])': 'Global_Objects/Math/max',
  'Math.min([x[, y[, …]]])': 'Global_Objects/Math/min',
  'Math.pow(x, y)': 'Global_Objects/Math/pow',
  'Math.random()': 'Global_Objects/Math/random',
  'Math.round(x)': 'Global_Objects/Math/round',
  'Math.sign(x)': 'Global_Objects/Math/sign',
  'Math.sin(x)': 'Global_Objects/Math/sin',
  'Math.sinh(x)': 'Global_Objects/Math/sinh',
  'Math.sqrt(x)': 'Global_Objects/Math/sqrt',
  'Math.tan(x)': 'Global_Objects/Math/tan',
  'Math.tanh(x)': 'Global_Objects/Math/tanh',
  'Math.trunc(x)': 'Global_Objects/Math/trunc',
  'JSON.parse()': 'Global_Objects/JSON/parse',
  'JSON.stringify()': 'Global_Objects/JSON/stringify',
  'get Map[@@species]': 'Global_Objects/Map/@@species',
  'Map.prototype': 'Global_Objects/Map/prototype',
  'Map.prototype.size': 'Global_Objects/Map/size',
  'Map.prototype.clear()': 'Global_Objects/Map/clear',
  'Map.prototype.delete(key)': 'Global_Objects/Map/delete',
  'Map.prototype.entries()': 'Global_Objects/Map/entries',
  'Map.prototype.forEach(callbackFn[, thisArg])': 'Global_Objects/Map/forEach',
  'Map.prototype.get(key)': 'Global_Objects/Map/get',
  'Map.prototype.has(key)': 'Global_Objects/Map/has',
  'Map.prototype.keys()': 'Global_Objects/Map/keys',
  'Map.prototype.set(key, value)': 'Global_Objects/Map/set',
  'Map.prototype.values()': 'Global_Objects/Map/values',
  'Map.prototype[@@iterator]()': 'Global_Objects/Map/@@iterator',
  'Number.EPSILON': 'Global_Objects/Number/EPSILON',
  'Number.MAX_SAFE_INTEGER': 'Global_Objects/Number/MAX_SAFE_INTEGER',
  'Number.MAX_VALUE': 'Global_Objects/Number/MAX_VALUE',
  'Number.MIN_SAFE_INTEGER': 'Global_Objects/Number/MIN_SAFE_INTEGER',
  'Number.MIN_VALUE': 'Global_Objects/Number/MIN_VALUE',
  'Number.NaN': 'Global_Objects/Number/NaN',
  'Number.NEGATIVE_INFINITY': 'Global_Objects/Number/NEGATIVE_INFINITY',
  'Number.POSITIVE_INFINITY': 'Global_Objects/Number/POSITIVE_INFINITY',
  'Number.prototype': 'Global_Objects/Number/prototype',
  'Number.isNaN()': 'Global_Objects/Number/isNaN',
  'Number.isFinite()': 'Global_Objects/Number/isFinite',
  'Number.isInteger()': 'Global_Objects/Number/isInteger',
  'Number.isSafeInteger()': 'Global_Objects/Number/isSafeInteger',
  'Number.toInteger()': 'Global_Objects/Number/toInteger',
  'Number.parseFloat()': 'Global_Objects/Number/parseFloat',
  'Number.parseInt()': 'Global_Objects/Number/parseInt',
  'Number.prototype.toExponential()': 'Global_Objects/Number/toExponential',
  'Number.prototype.toFixed()': 'Global_Objects/Number/toFixed',
  'Number.prototype.toLocaleString()': 'Global_Objects/Number/toLocaleString',
  'Number.prototype.toPrecision()': 'Global_Objects/Number/toPrecision',
  'Number.prototype.toSource()': 'Global_Objects/Number/toSource',
  'Number.prototype.toString()': 'Global_Objects/Number/toString',
  'Number.prototype.valueOf()': 'Global_Objects/Number/valueOf',
  'Object.prototype': 'Global_Objects/Object/prototype',
  'Object.assign()': 'Global_Objects/Object/assign',
  'Object.create()': 'Global_Objects/Object/create',
  'Object.defineProperty()': 'Global_Objects/Object/defineProperty',
  'Object.defineProperties()': 'Global_Objects/Object/defineProperties',
  'Object.entries()': 'Global_Objects/Object/entries',
  'Object.freeze()': 'Global_Objects/Object/freeze',
  'Object.getOwnPropertyDescriptor()':
    'Global_Objects/Object/getOwnPropertyDescriptor',
  'Object.getOwnPropertyDescriptors()':
    'Global_Objects/Object/getOwnPropertyDescriptors',
  'Object.getOwnPropertyNames()': 'Global_Objects/Object/getOwnPropertyNames',
  'Object.getOwnPropertySymbols()':
    'Global_Objects/Object/getOwnPropertySymbols',
  'Object.getPrototypeOf()': 'Global_Objects/Object/getPrototypeOf',
  'Object.is()': 'Global_Objects/Object/is',
  'Object.isExtensible()': 'Global_Objects/Object/isExtensible',
  'Object.isFrozen()': 'Global_Objects/Object/isFrozen',
  'Object.isSealed()': 'Global_Objects/Object/isSealed',
  'Object.keys()': 'Global_Objects/Object/keys',
  'Object.preventExtensions()': 'Global_Objects/Object/preventExtensions',
  'Object.seal()': 'Global_Objects/Object/seal',
  'Object.setPrototypeOf()': 'Global_Objects/Object/setPrototypeOf',
  'Object.values()': 'Global_Objects/Object/values',
  'Object.prototype.constructor': 'Global_Objects/Object/constructor',
  'Object.prototype.__proto__': 'Global_Objects/Object/__proto__',
  'Object.prototype.__noSuchMethod__': 'Global_Objects/Object/__noSuchMethod__',
  'Object.prototype.__count__': 'Global_Objects/Object/count',
  'Object.prototype.__parent__': 'Global_Objects/Object/parent',
  'Object.prototype.__defineGetter__()':
    'Global_Objects/Object/__defineGetter__',
  'Object.prototype.__defineSetter__()':
    'Global_Objects/Object/__defineSetter__',
  'Object.prototype.__lookupGetter__()':
    'Global_Objects/Object/__lookupGetter__',
  'Object.prototype.__lookupSetter__()':
    'Global_Objects/Object/__lookupSetter__',
  'Object.prototype.hasOwnProperty()': 'Global_Objects/Object/hasOwnProperty',
  'Object.prototype.isPrototypeOf()': 'Global_Objects/Object/isPrototypeOf',
  'Object.prototype.propertyIsEnumerable()':
    'Global_Objects/Object/propertyIsEnumerable',
  'Object.prototype.toSource()': 'Global_Objects/Object/toSource',
  'Object.prototype.toLocaleString()': 'Global_Objects/Object/toLocaleString',
  'Object.prototype.toString()': 'Global_Objects/Object/toString',
  'Object.prototype.unwatch()': 'Global_Objects/Object/unwatch',
  'Object.prototype.valueOf()': 'Global_Objects/Object/valueOf',
  'Object.prototype.watch()': 'Global_Objects/Object/watch',
  'Object.prototype.eval()': 'Global_Objects/Object/eval',
  'Promise.prototype': 'Global_Objects/Promise/prototype',
  'Promise.all(iterable)': 'Global_Objects/Promise/all',
  'Promise.race(iterable)': 'Global_Objects/Promise/race',
  'Promise.reject(reason)': 'Global_Objects/Promise/reject',
  'Promise.resolve(value)': 'Global_Objects/Promise/resolve',
  'Promise.prototype.catch(onRejected)': 'Global_Objects/Promise/catch',
  'Promise.prototype.then(onFulfilled, onRejected)':
    'Global_Objects/Promise/then',
  'RangeError.prototype': 'Global_Objects/RangeError/prototype',
  'RangeError.prototype.message': 'Global_Objects/Error/message',
  'RangeError.prototype.name': 'Global_Objects/Error/name',
  'RangeError.prototype.fileName': 'Global_Objects/Error/fileName',
  'RangeError.prototype.lineNumber': 'Global_Objects/Error/lineNumber',
  'RangeError.prototype.columnNumber': 'Global_Objects/Error/columnNumber',
  'RangeError.prototype.stack': 'Global_Objects/Error/stack',
  'ReferenceError.prototype': 'Global_Objects/ReferenceError/prototype',
  'ReferenceError.prototype.message': 'Global_Objects/Error/message',
  'ReferenceError.prototype.name': 'Global_Objects/Error/name',
  'ReferenceError.prototype.fileName': 'Global_Objects/Error/fileName',
  'ReferenceError.prototype.lineNumber': 'Global_Objects/Error/lineNumber',
  'ReferenceError.prototype.columnNumber': 'Global_Objects/Error/columnNumber',
  'ReferenceError.prototype.stack': 'Global_Objects/Error/stack',
  handler: 'Global_Objects/Proxy/handler',
  'Proxy.revocable()': 'Global_Objects/Proxy/revocable',
  'handler.getPrototypeOf()': 'Global_Objects/Proxy/handler/getPrototypeOf',
  'handler.setPrototypeOf()': 'Global_Objects/Proxy/handler/setPrototypeOf',
  'handler.isExtensible()': 'Global_Objects/Proxy/handler/isExtensible',
  'handler.preventExtensions()':
    'Global_Objects/Proxy/handler/preventExtensions',
  'handler.getOwnPropertyDescriptor()':
    'Global_Objects/Proxy/handler/getOwnPropertyDescriptor',
  'handler.defineProperty()': 'Global_Objects/Proxy/handler/defineProperty',
  'handler.has()': 'Global_Objects/Proxy/handler/has',
  'handler.get()': 'Global_Objects/Proxy/handler/get',
  'handler.set()': 'Global_Objects/Proxy/handler/set',
  'handler.deleteProperty()': 'Global_Objects/Proxy/handler/deleteProperty',
  'handler.ownKeys()': 'Global_Objects/Proxy/handler/ownKeys',
  'handler.apply()': 'Global_Objects/Proxy/handler/apply',
  'handler.construct()': 'Global_Objects/Proxy/handler/construct',
  'Reflect.apply()': 'Global_Objects/Reflect/apply',
  'Reflect.construct()': 'Global_Objects/Reflect/construct',
  'Reflect.defineProperty()': 'Global_Objects/Reflect/defineProperty',
  'Reflect.deleteProperty()': 'Global_Objects/Reflect/deleteProperty',
  'Reflect.get()': 'Global_Objects/Reflect/get',
  'Reflect.getOwnPropertyDescriptor()':
    'Global_Objects/Reflect/getOwnPropertyDescriptor',
  'Reflect.getPrototypeOf()': 'Global_Objects/Reflect/getPrototypeOf',
  'Reflect.has()': 'Global_Objects/Reflect/has',
  'Reflect.isExtensible()': 'Global_Objects/Reflect/isExtensible',
  'Reflect.ownKeys()': 'Global_Objects/Reflect/ownKeys',
  'Reflect.preventExtensions()': 'Global_Objects/Reflect/preventExtensions',
  'Reflect.set()': 'Global_Objects/Reflect/set',
  'Reflect.setPrototypeOf()': 'Global_Objects/Reflect/setPrototypeOf',
  'SIMD.%type%.splat()': 'Global_Objects/SIMD/splat',
  'SIMD.%type%.check()': 'Global_Objects/SIMD/check',
  'SIMD.%type%.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.%type%.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.%type%.load()': 'Global_Objects/SIMD/load',
  'SIMD.%type%.load1()': 'Global_Objects/SIMD/load',
  'SIMD.%type%.load2()': 'Global_Objects/SIMD/load',
  'SIMD.%type%.load3()': 'Global_Objects/SIMD/load',
  'SIMD.%type%.store()': 'Global_Objects/SIMD/store',
  'SIMD.%type%.store1()': 'Global_Objects/SIMD/store',
  'SIMD.%type%.store2()': 'Global_Objects/SIMD/store',
  'SIMD.%type%.store3()': 'Global_Objects/SIMD/store',
  'SIMD.%FloatType%.abs()': 'Global_Objects/SIMD/abs',
  'SIMD.%type%.add()': 'Global_Objects/SIMD/add',
  'SIMD.%type%.addSaturate()': 'Global_Objects/SIMD/addSaturate',
  'SIMD.%FloatType%.div()': 'Global_Objects/SIMD/div',
  'SIMD.%type%.mul()': 'Global_Objects/SIMD/mul',
  'SIMD.%type%.neg()': 'Global_Objects/SIMD/neg',
  'SIMD.%FloatType%.reciprocalApproximation()':
    'Global_Objects/SIMD/reciprocalApproximation',
  'SIMD.%FloatType%.reciprocalSqrtApproximation()':
    'Global_Objects/SIMD/reciprocalSqrtApproximation',
  'SIMD.%type%.sub()': 'Global_Objects/SIMD/sub',
  'SIMD.%type%.subSaturate()': 'Global_Objects/SIMD/subSaturate',
  'SIMD.%FloatType%.sqrt()': 'Global_Objects/SIMD/sqrt',
  'SIMD.%type%.shuffle()': 'Global_Objects/SIMD/shuffle',
  'SIMD.%type%.swizzle()': 'Global_Objects/SIMD/swizzle',
  'SIMD.%FloatType%.max()': 'Global_Objects/SIMD/max',
  'SIMD.%FloatType%.maxNum()': 'Global_Objects/SIMD/maxNum',
  'SIMD.%FloatType%.min()': 'Global_Objects/SIMD/min',
  'SIMD.%FloatType%.minNum()': 'Global_Objects/SIMD/minNum',
  'SIMD.%type%.select()': 'Global_Objects/SIMD/select',
  'SIMD.%type%.equal()': 'Global_Objects/SIMD/equal',
  'SIMD.%type%.notEqual()': 'Global_Objects/SIMD/notEqual',
  'SIMD.%type%.lessThan()': 'Global_Objects/SIMD/lessThan',
  'SIMD.%type%.lessThanOrEqual()': 'Global_Objects/SIMD/lessThanOrEqual',
  'SIMD.%type%.greaterThan()': 'Global_Objects/SIMD/greaterThan',
  'SIMD.%type%.greaterThanOrEqual()': 'Global_Objects/SIMD/greaterThanOrEqual',
  'SIMD.%type%.and()': 'Global_Objects/SIMD/and',
  'SIMD.%type%.or()': 'Global_Objects/SIMD/or',
  'SIMD.%type%.xor()': 'Global_Objects/SIMD/xor',
  'SIMD.%type%.not()': 'Global_Objects/SIMD/not',
  'SIMD.%IntegerType%.shiftLeftByScalar()':
    'Global_Objects/SIMD/shiftLeftByScalar',
  'SIMD.%IntegerType%.shiftRightByScalar()':
    'Global_Objects/SIMD/shiftRightByScalar',
  'SIMD.%BooleanType%.allTrue()': 'Global_Objects/SIMD/allTrue',
  'SIMD.%BooleanType%.anyTrue()': 'Global_Objects/SIMD/anyTrue',
  'SIMD.%type%.fromFloat32x4()': 'Global_Objects/SIMD/fromFloat32x4',
  'SIMD.%type%.fromFloat32x4Bits()': 'Global_Objects/SIMD/fromFloat32x4Bits',
  'SIMD.%type%.fromFloat64x2Bits()': 'Global_Objects/SIMD/fromFloat64x2Bits',
  'SIMD.%type%.fromInt32x4()': 'Global_Objects/SIMD/fromInt32x4',
  'SIMD.%type%.fromInt32x4Bits()': 'Global_Objects/SIMD/fromInt32x4Bits',
  'SIMD.%type%.fromInt16x8Bits()': 'Global_Objects/SIMD/fromInt16x8Bits',
  'SIMD.%type%.fromInt8x16Bits()': 'Global_Objects/SIMD/fromInt8x16Bits',
  'SIMD.%type%.fromUint32x4()': 'Global_Objects/SIMD/fromUint32x4',
  'SIMD.%type%.fromUint32x4Bits()': 'Global_Objects/SIMD/fromUint32x4Bits',
  'SIMD.%type%.fromUint16x8Bits()': 'Global_Objects/SIMD/fromUint16x8Bits',
  'SIMD.%type%.fromUint8x16Bits()': 'Global_Objects/SIMD/fromUint8x16Bits',
  'SIMD.%type%.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.%type%.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.%type%.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.%type%.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'SIMD.Bool16x8.splat()': 'Global_Objects/SIMD/splat',
  'SIMD.Bool16x8.check()': 'Global_Objects/SIMD/check',
  'SIMD.Bool16x8.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.Bool16x8.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.Bool16x8.allTrue()': 'Global_Objects/SIMD/allTrue',
  'SIMD.Bool16x8.anyTrue()': 'Global_Objects/SIMD/anyTrue',
  'SIMD.Bool16x8.and()': 'Global_Objects/SIMD/and',
  'SIMD.Bool16x8.or()': 'Global_Objects/SIMD/or',
  'SIMD.Bool16x8.xor()': 'Global_Objects/SIMD/xor',
  'SIMD.Bool16x8.not()': 'Global_Objects/SIMD/not',
  'SIMD.Bool16x8.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.Bool16x8.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.Bool16x8.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.Bool16x8.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'SIMD.Bool32x4.splat()': 'Global_Objects/SIMD/splat',
  'SIMD.Bool32x4.check()': 'Global_Objects/SIMD/check',
  'SIMD.Bool32x4.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.Bool32x4.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.Bool32x4.allTrue()': 'Global_Objects/SIMD/allTrue',
  'SIMD.Bool32x4.anyTrue()': 'Global_Objects/SIMD/anyTrue',
  'SIMD.Bool32x4.and()': 'Global_Objects/SIMD/and',
  'SIMD.Bool32x4.or()': 'Global_Objects/SIMD/or',
  'SIMD.Bool32x4.xor()': 'Global_Objects/SIMD/xor',
  'SIMD.Bool32x4.not()': 'Global_Objects/SIMD/not',
  'SIMD.Bool32x4.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.Bool32x4.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.Bool32x4.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.Bool32x4.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'SIMD.Bool64x2.splat()': 'Global_Objects/SIMD/splat',
  'SIMD.Bool64x2.check()': 'Global_Objects/SIMD/check',
  'SIMD.Bool64x2.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.Bool64x2.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.Bool64x2.allTrue()': 'Global_Objects/SIMD/allTrue',
  'SIMD.Bool64x2.anyTrue()': 'Global_Objects/SIMD/anyTrue',
  'SIMD.Bool64x2.and()': 'Global_Objects/SIMD/and',
  'SIMD.Bool64x2.or()': 'Global_Objects/SIMD/or',
  'SIMD.Bool64x2.xor()': 'Global_Objects/SIMD/xor',
  'SIMD.Bool64x2.not()': 'Global_Objects/SIMD/not',
  'SIMD.Bool64x2.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.Bool64x2.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.Bool64x2.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.Bool64x2.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'SIMD.Bool8x16.splat()': 'Global_Objects/SIMD/splat',
  'SIMD.Bool8x16.check()': 'Global_Objects/SIMD/check',
  'SIMD.Bool8x16.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.Bool8x16.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.Bool8x16.allTrue()': 'Global_Objects/SIMD/allTrue',
  'SIMD.Bool8x16.anyTrue()': 'Global_Objects/SIMD/anyTrue',
  'SIMD.Bool8x16.and()': 'Global_Objects/SIMD/and',
  'SIMD.Bool8x16.or()': 'Global_Objects/SIMD/or',
  'SIMD.Bool8x16.xor()': 'Global_Objects/SIMD/xor',
  'SIMD.Bool8x16.not()': 'Global_Objects/SIMD/not',
  'SIMD.Bool8x16.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.Bool8x16.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.Bool8x16.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.Bool8x16.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'RegExp.prototype': 'Global_Objects/RegExp/prototype',
  'get RegExp[@@species]': 'Global_Objects/RegExp/@@species',
  'RegExp.lastIndex': 'Global_Objects/RegExp/lastIndex',
  'RegExp.prototype.flags': 'Global_Objects/RegExp/flags',
  'RegExp.prototype.global': 'Global_Objects/RegExp/global',
  'RegExp.prototype.ignoreCase': 'Global_Objects/RegExp/ignoreCase',
  'RegExp.prototype.multiline': 'Global_Objects/RegExp/multiline',
  'RegExp.prototype.source': 'Global_Objects/RegExp/source',
  'RegExp.prototype.sticky': 'Global_Objects/RegExp/sticky',
  'RegExp.prototype.unicode': 'Global_Objects/RegExp/unicode',
  'RegExp.prototype.compile()': 'Global_Objects/RegExp/compile',
  'RegExp.prototype.exec()': 'Global_Objects/RegExp/exec',
  'RegExp.prototype.test()': 'Global_Objects/RegExp/test',
  'RegExp.prototype[@@match]()': 'Global_Objects/RegExp/@@match',
  'RegExp.prototype[@@replace]()': 'Global_Objects/RegExp/@@replace',
  'RegExp.prototype[@@search]()': 'Global_Objects/RegExp/@@search',
  'RegExp.prototype[@@split]()': 'Global_Objects/RegExp/@@split',
  'RegExp.prototype.toSource()': 'Global_Objects/RegExp/toSource',
  'RegExp.prototype.toString()': 'Global_Objects/RegExp/toString',
  'SIMD.Float32x4.splat()': 'Global_Objects/SIMD/splat',
  'SIMD.Float32x4.check()': 'Global_Objects/SIMD/check',
  'SIMD.Float32x4.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.Float32x4.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.Float32x4.load()': 'Global_Objects/SIMD/load',
  'SIMD.Float32x4.load1()': 'Global_Objects/SIMD/load',
  'SIMD.Float32x4.load2()': 'Global_Objects/SIMD/load',
  'SIMD.Float32x4.load3()': 'Global_Objects/SIMD/load',
  'SIMD.Float32x4.store()': 'Global_Objects/SIMD/store',
  'SIMD.Float32x4.store1()': 'Global_Objects/SIMD/store',
  'SIMD.Float32x4.store2()': 'Global_Objects/SIMD/store',
  'SIMD.Float32x4.store3()': 'Global_Objects/SIMD/store',
  'SIMD.Float32x4.abs()': 'Global_Objects/SIMD/abs',
  'SIMD.Float32x4.add()': 'Global_Objects/SIMD/add',
  'SIMD.Float32x4.div()': 'Global_Objects/SIMD/div',
  'SIMD.Float32x4.mul()': 'Global_Objects/SIMD/mul',
  'SIMD.Float32x4.neg()': 'Global_Objects/SIMD/neg',
  'SIMD.Float32x4.reciprocalApproximation()':
    'Global_Objects/SIMD/reciprocalApproximation',
  'SIMD.Float32x4.reciprocalSqrtApproximation()':
    'Global_Objects/SIMD/reciprocalSqrtApproximation',
  'SIMD.Float32x4.sub()': 'Global_Objects/SIMD/sub',
  'SIMD.Float32x4.sqrt()': 'Global_Objects/SIMD/sqrt',
  'SIMD.Float32x4.shuffle()': 'Global_Objects/SIMD/shuffle',
  'SIMD.Float32x4.swizzle()': 'Global_Objects/SIMD/swizzle',
  'SIMD.Float32x4.max()': 'Global_Objects/SIMD/max',
  'SIMD.Float32x4.maxNum()': 'Global_Objects/SIMD/maxNum',
  'SIMD.Float32x4.min()': 'Global_Objects/SIMD/min',
  'SIMD.Float32x4.minNum()': 'Global_Objects/SIMD/minNum',
  'SIMD.Float32x4.select()': 'Global_Objects/SIMD/select',
  'SIMD.Float32x4.equal()': 'Global_Objects/SIMD/equal',
  'SIMD.Float32x4.notEqual()': 'Global_Objects/SIMD/notEqual',
  'SIMD.Float32x4.lessThan()': 'Global_Objects/SIMD/lessThan',
  'SIMD.Float32x4.lessThanOrEqual()': 'Global_Objects/SIMD/lessThanOrEqual',
  'SIMD.Float32x4.greaterThan()': 'Global_Objects/SIMD/greaterThan',
  'SIMD.Float32x4.greaterThanOrEqual()':
    'Global_Objects/SIMD/greaterThanOrEqual',
  'SIMD.Float32x4.fromFloat64x2Bits()': 'Global_Objects/SIMD/fromFloat64x2Bits',
  'SIMD.Float32x4.fromInt32x4()': 'Global_Objects/SIMD/fromInt32x4',
  'SIMD.Float32x4.fromInt32x4Bits()': 'Global_Objects/SIMD/fromInt32x4Bits',
  'SIMD.Float32x4.fromInt16x8Bits()': 'Global_Objects/SIMD/fromInt16x8Bits',
  'SIMD.Float32x4.fromInt8x16Bits()': 'Global_Objects/SIMD/fromInt8x16Bits',
  'SIMD.Float32x4.fromUint32x4()': 'Global_Objects/SIMD/fromUint32x4',
  'SIMD.Float32x4.fromUint32x4Bits()': 'Global_Objects/SIMD/fromUint32x4Bits',
  'SIMD.Float32x4.fromUint16x8Bits()': 'Global_Objects/SIMD/fromUint16x8Bits',
  'SIMD.Float32x4.fromUint8x16Bits()': 'Global_Objects/SIMD/fromUint8x16Bits',
  'SIMD.Float32x4.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.Float32x4.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.Float32x4.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.Float32x4.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'SIMD.Float64x2.splat()': 'Global_Objects/SIMD/splat',
  'SIMD.Float64x2.check()': 'Global_Objects/SIMD/check',
  'SIMD.Float64x2.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.Float64x2.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.Float64x2.load()': 'Global_Objects/SIMD/load',
  'SIMD.Float64x2.load1()': 'Global_Objects/SIMD/load',
  'SIMD.Float64x2.store()': 'Global_Objects/SIMD/store',
  'SIMD.Float64x2.store1()': 'Global_Objects/SIMD/store',
  'SIMD.Float64x2.abs()': 'Global_Objects/SIMD/abs',
  'SIMD.Float64x2.add()': 'Global_Objects/SIMD/add',
  'SIMD.Float64x2.div()': 'Global_Objects/SIMD/div',
  'SIMD.Float64x2.mul()': 'Global_Objects/SIMD/mul',
  'SIMD.Float64x2.neg()': 'Global_Objects/SIMD/neg',
  'SIMD.Float64x2.reciprocalApproximation()':
    'Global_Objects/SIMD/reciprocalApproximation',
  'SIMD.Float64x2.reciprocalSqrtApproximation()':
    'Global_Objects/SIMD/reciprocalSqrtApproximation',
  'SIMD.Float64x2.sub()': 'Global_Objects/SIMD/sub',
  'SIMD.Float64x2.sqrt()': 'Global_Objects/SIMD/sqrt',
  'SIMD.Float64x2.shuffle()': 'Global_Objects/SIMD/shuffle',
  'SIMD.Float64x2.swizzle()': 'Global_Objects/SIMD/swizzle',
  'SIMD.Float64x2.max()': 'Global_Objects/SIMD/max',
  'SIMD.Float64x2.maxNum()': 'Global_Objects/SIMD/maxNum',
  'SIMD.Float64x2.min()': 'Global_Objects/SIMD/min',
  'SIMD.Float64x2.minNum()': 'Global_Objects/SIMD/minNum',
  'SIMD.Float64x2.select()': 'Global_Objects/SIMD/select',
  'SIMD.Float64x2.equal()': 'Global_Objects/SIMD/equal',
  'SIMD.Float64x2.notEqual()': 'Global_Objects/SIMD/notEqual',
  'SIMD.Float64x2.lessThan()': 'Global_Objects/SIMD/lessThan',
  'SIMD.Float64x2.lessThanOrEqual()': 'Global_Objects/SIMD/lessThanOrEqual',
  'SIMD.Float64x2.greaterThan()': 'Global_Objects/SIMD/greaterThan',
  'SIMD.Float64x2.greaterThanOrEqual()':
    'Global_Objects/SIMD/greaterThanOrEqual',
  'SIMD.Float64x2.fromFloat32x4Bits()': 'Global_Objects/SIMD/fromFloat32x4Bits',
  'SIMD.Float64x2.fromInt32x4Bits()': 'Global_Objects/SIMD/fromInt32x4Bits',
  'SIMD.Float64x2.fromInt16x8Bits()': 'Global_Objects/SIMD/fromInt16x8Bits',
  'SIMD.Float64x2.fromInt8x16Bits()': 'Global_Objects/SIMD/fromInt8x16Bits',
  'SIMD.Float64x2.fromUint32x4Bits()': 'Global_Objects/SIMD/fromUint32x4Bits',
  'SIMD.Float64x2.fromUint16x8Bits()': 'Global_Objects/SIMD/fromUint16x8Bits',
  'SIMD.Float64x2.fromUint8x16Bits()': 'Global_Objects/SIMD/fromUint8x16Bits',
  'SIMD.Float64x2.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.Float64x2.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.Float64x2.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.Float64x2.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'SIMD.Int16x8.splat()': 'Global_Objects/SIMD/splat',
  'SIMD.Int16x8.check()': 'Global_Objects/SIMD/check',
  'SIMD.Int16x8.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.Int16x8.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.Int16x8.load()': 'Global_Objects/SIMD/load',
  'SIMD.Int16x8.store()': 'Global_Objects/SIMD/store',
  'SIMD.Int16x8.add()': 'Global_Objects/SIMD/add',
  'SIMD.Int16x8.addSaturate()': 'Global_Objects/SIMD/addSaturate',
  'SIMD.Int16x8.mul()': 'Global_Objects/SIMD/mul',
  'SIMD.Int16x8.neg()': 'Global_Objects/SIMD/neg',
  'SIMD.Int16x8.sub()': 'Global_Objects/SIMD/sub',
  'SIMD.Int16x8.subSaturate()': 'Global_Objects/SIMD/subSaturate',
  'SIMD.Int16x8.shuffle()': 'Global_Objects/SIMD/shuffle',
  'SIMD.Int16x8.swizzle()': 'Global_Objects/SIMD/swizzle',
  'SIMD.Int16x8.select()': 'Global_Objects/SIMD/select',
  'SIMD.Int16x8.equal()': 'Global_Objects/SIMD/equal',
  'SIMD.Int16x8.notEqual()': 'Global_Objects/SIMD/notEqual',
  'SIMD.Int16x8.lessThan()': 'Global_Objects/SIMD/lessThan',
  'SIMD.Int16x8.lessThanOrEqual()': 'Global_Objects/SIMD/lessThanOrEqual',
  'SIMD.Int16x8.greaterThan()': 'Global_Objects/SIMD/greaterThan',
  'SIMD.Int16x8.greaterThanOrEqual()': 'Global_Objects/SIMD/greaterThanOrEqual',
  'SIMD.Int16x8.and()': 'Global_Objects/SIMD/and',
  'SIMD.Int16x8.or()': 'Global_Objects/SIMD/or',
  'SIMD.Int16x8.xor()': 'Global_Objects/SIMD/xor',
  'SIMD.Int16x8.not()': 'Global_Objects/SIMD/not',
  'SIMD.Int16x8.shiftLeftByScalar()': 'Global_Objects/SIMD/shiftLeftByScalar',
  'SIMD.Int16x8.shiftRightByScalar()': 'Global_Objects/SIMD/shiftRightByScalar',
  'SIMD.Int16x8.fromFloat32x4Bits()': 'Global_Objects/SIMD/fromFloat32x4Bits',
  'SIMD.Int16x8.fromFloat64x2Bits()': 'Global_Objects/SIMD/fromFloat64x2Bits',
  'SIMD.Int16x8.fromInt32x4Bits()': 'Global_Objects/SIMD/fromInt32x4Bits',
  'SIMD.Int16x8.fromInt8x16Bits()': 'Global_Objects/SIMD/fromInt8x16Bits',
  'SIMD.Int16x8.fromUint32x4Bits()': 'Global_Objects/SIMD/fromUint32x4Bits',
  'SIMD.Int16x8.fromUint16x8Bits()': 'Global_Objects/SIMD/fromUint16x8Bits',
  'SIMD.Int16x8.fromUint8x16Bits()': 'Global_Objects/SIMD/fromUint8x16Bits',
  'SIMD.Int16x8.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.Int16x8.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.Int16x8.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.Int16x8.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'SIMD.Int32x4.splat()': 'Global_Objects/SIMD/splat',
  'SIMD.Int32x4.check()': 'Global_Objects/SIMD/check',
  'SIMD.Int32x4.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.Int32x4.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.Int32x4.load()': 'Global_Objects/SIMD/load',
  'SIMD.Int32x4.load1()': 'Global_Objects/SIMD/load',
  'SIMD.Int32x4.load2()': 'Global_Objects/SIMD/load',
  'SIMD.Int32x4.load3()': 'Global_Objects/SIMD/load',
  'SIMD.Int32x4.store()': 'Global_Objects/SIMD/store',
  'SIMD.Int32x4.store1()': 'Global_Objects/SIMD/store',
  'SIMD.Int32x4.store2()': 'Global_Objects/SIMD/store',
  'SIMD.Int32x4.store3()': 'Global_Objects/SIMD/store',
  'SIMD.Int32x4.add()': 'Global_Objects/SIMD/add',
  'SIMD.Int32x4.mul()': 'Global_Objects/SIMD/mul',
  'SIMD.Int32x4.neg()': 'Global_Objects/SIMD/neg',
  'SIMD.Int32x4.sub()': 'Global_Objects/SIMD/sub',
  'SIMD.Int32x4.shuffle()': 'Global_Objects/SIMD/shuffle',
  'SIMD.Int32x4.swizzle()': 'Global_Objects/SIMD/swizzle',
  'SIMD.Int32x4.select()': 'Global_Objects/SIMD/select',
  'SIMD.Int32x4.equal()': 'Global_Objects/SIMD/equal',
  'SIMD.Int32x4.notEqual()': 'Global_Objects/SIMD/notEqual',
  'SIMD.Int32x4.lessThan()': 'Global_Objects/SIMD/lessThan',
  'SIMD.Int32x4.lessThanOrEqual()': 'Global_Objects/SIMD/lessThanOrEqual',
  'SIMD.Int32x4.greaterThan()': 'Global_Objects/SIMD/greaterThan',
  'SIMD.Int32x4.greaterThanOrEqual()': 'Global_Objects/SIMD/greaterThanOrEqual',
  'SIMD.Int32x4.and()': 'Global_Objects/SIMD/and',
  'SIMD.Int32x4.or()': 'Global_Objects/SIMD/or',
  'SIMD.Int32x4.xor()': 'Global_Objects/SIMD/xor',
  'SIMD.Int32x4.not()': 'Global_Objects/SIMD/not',
  'SIMD.Int32x4.shiftLeftByScalar()': 'Global_Objects/SIMD/shiftLeftByScalar',
  'SIMD.Int32x4.shiftRightByScalar()': 'Global_Objects/SIMD/shiftRightByScalar',
  'SIMD.Int32x4.fromFloat32x4()': 'Global_Objects/SIMD/fromFloat32x4',
  'SIMD.Int32x4.fromFloat32x4Bits()': 'Global_Objects/SIMD/fromFloat32x4Bits',
  'SIMD.Int32x4.fromFloat64x2Bits()': 'Global_Objects/SIMD/fromFloat64x2Bits',
  'SIMD.Int32x4.fromInt16x8Bits()': 'Global_Objects/SIMD/fromInt16x8Bits',
  'SIMD.Int32x4.fromInt8x16Bits()': 'Global_Objects/SIMD/fromInt8x16Bits',
  'SIMD.Int32x4.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.Int32x4.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.Int32x4.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.Int32x4.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'SIMD.Int8x16.splat()': 'Global_Objects/SIMD/splat',
  'SIMD.Int8x16.check()': 'Global_Objects/SIMD/check',
  'SIMD.Int8x16.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.Int8x16.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.Int8x16.load()': 'Global_Objects/SIMD/load',
  'SIMD.Int8x16.store()': 'Global_Objects/SIMD/store',
  'SIMD.Int8x16.add()': 'Global_Objects/SIMD/add',
  'SIMD.Int8x16.addSaturate()': 'Global_Objects/SIMD/addSaturate',
  'SIMD.Int8x16.mul()': 'Global_Objects/SIMD/mul',
  'SIMD.Int8x16.neg()': 'Global_Objects/SIMD/neg',
  'SIMD.Int8x16.sub()': 'Global_Objects/SIMD/sub',
  'SIMD.Int8x16.subSaturate()': 'Global_Objects/SIMD/subSaturate',
  'SIMD.Int8x16.shuffle()': 'Global_Objects/SIMD/shuffle',
  'SIMD.Int8x16.swizzle()': 'Global_Objects/SIMD/swizzle',
  'SIMD.Int8x16.select()': 'Global_Objects/SIMD/select',
  'SIMD.Int8x16.equal()': 'Global_Objects/SIMD/equal',
  'SIMD.Int8x16.notEqual()': 'Global_Objects/SIMD/notEqual',
  'SIMD.Int8x16.lessThan()': 'Global_Objects/SIMD/lessThan',
  'SIMD.Int8x16.lessThanOrEqual()': 'Global_Objects/SIMD/lessThanOrEqual',
  'SIMD.Int8x16.greaterThan()': 'Global_Objects/SIMD/greaterThan',
  'SIMD.Int8x16.greaterThanOrEqual()': 'Global_Objects/SIMD/greaterThanOrEqual',
  'SIMD.Int8x16.and()': 'Global_Objects/SIMD/and',
  'SIMD.Int8x16.or()': 'Global_Objects/SIMD/or',
  'SIMD.Int8x16.xor()': 'Global_Objects/SIMD/xor',
  'SIMD.Int8x16.not()': 'Global_Objects/SIMD/not',
  'SIMD.Int8x16.shiftLeftByScalar()': 'Global_Objects/SIMD/shiftLeftByScalar',
  'SIMD.Int8x16.shiftRightByScalar()': 'Global_Objects/SIMD/shiftRightByScalar',
  'SIMD.Int8x16.fromFloat32x4Bits()': 'Global_Objects/SIMD/fromFloat32x4Bits',
  'SIMD.Int8x16.fromFloat64x2Bits()': 'Global_Objects/SIMD/fromFloat64x2Bits',
  'SIMD.Int8x16.fromInt32x4Bits()': 'Global_Objects/SIMD/fromInt32x4Bits',
  'SIMD.Int8x16.fromInt16x8Bits()': 'Global_Objects/SIMD/fromInt16x8Bits',
  'SIMD.Int8x16.fromUint32x4Bits()': 'Global_Objects/SIMD/fromUint32x4Bits',
  'SIMD.Int8x16.fromUint16x8Bits()': 'Global_Objects/SIMD/fromUint16x8Bits',
  'SIMD.Int8x16.fromUint8x16Bits()': 'Global_Objects/SIMD/fromUint8x16Bits',
  'SIMD.Int8x16.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.Int8x16.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.Int8x16.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.Int8x16.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'SIMD.Uint32x4.splat()': 'Global_Objects/SIMD/splat',
  'SIMD.Uint32x4.check()': 'Global_Objects/SIMD/check',
  'SIMD.Uint32x4.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.Uint32x4.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.Uint32x4.load()': 'Global_Objects/SIMD/load',
  'SIMD.Uint32x4.load1()': 'Global_Objects/SIMD/load',
  'SIMD.Uint32x4.load2()': 'Global_Objects/SIMD/load',
  'SIMD.Uint32x4.load3()': 'Global_Objects/SIMD/load',
  'SIMD.Uint32x4.store()': 'Global_Objects/SIMD/store',
  'SIMD.Uint32x4.store1()': 'Global_Objects/SIMD/store',
  'SIMD.Uint32x4.store2()': 'Global_Objects/SIMD/store',
  'SIMD.Uint32x4.store3()': 'Global_Objects/SIMD/store',
  'SIMD.Uint32x4.add()': 'Global_Objects/SIMD/add',
  'SIMD.Uint32x4.mul()': 'Global_Objects/SIMD/mul',
  'SIMD.Uint32x4.neg()': 'Global_Objects/SIMD/neg',
  'SIMD.Uint32x4.sub()': 'Global_Objects/SIMD/sub',
  'SIMD.Uint32x4.shuffle()': 'Global_Objects/SIMD/shuffle',
  'SIMD.Uint32x4.swizzle()': 'Global_Objects/SIMD/swizzle',
  'SIMD.Uint32x4.select()': 'Global_Objects/SIMD/select',
  'SIMD.Uint32x4.equal()': 'Global_Objects/SIMD/equal',
  'SIMD.Uint32x4.notEqual()': 'Global_Objects/SIMD/notEqual',
  'SIMD.Uint32x4.lessThan()': 'Global_Objects/SIMD/lessThan',
  'SIMD.Uint32x4.lessThanOrEqual()': 'Global_Objects/SIMD/lessThanOrEqual',
  'SIMD.Uint32x4.greaterThan()': 'Global_Objects/SIMD/greaterThan',
  'SIMD.Uint32x4.greaterThanOrEqual()':
    'Global_Objects/SIMD/greaterThanOrEqual',
  'SIMD.Uint32x4.and()': 'Global_Objects/SIMD/and',
  'SIMD.Uint32x4.or()': 'Global_Objects/SIMD/or',
  'SIMD.Uint32x4.xor()': 'Global_Objects/SIMD/xor',
  'SIMD.Uint32x4.not()': 'Global_Objects/SIMD/not',
  'SIMD.Uint32x4.shiftLeftByScalar()': 'Global_Objects/SIMD/shiftLeftByScalar',
  'SIMD.Uint32x4.shiftRightByScalar()':
    'Global_Objects/SIMD/shiftRightByScalar',
  'SIMD.Uint32x4.fromFloat32x4()': 'Global_Objects/SIMD/fromFloat32x4',
  'SIMD.Uint32x4.fromFloat32x4Bits()': 'Global_Objects/SIMD/fromFloat32x4Bits',
  'SIMD.Uint32x4.fromFloat64x2Bits()': 'Global_Objects/SIMD/fromFloat64x2Bits',
  'SIMD.Uint32x4.fromInt32x4Bits()': 'Global_Objects/SIMD/fromInt32x4Bits',
  'SIMD.Uint32x4.fromInt16x8Bits()': 'Global_Objects/SIMD/fromInt16x8Bits',
  'SIMD.Uint32x4.fromInt8x16Bits()': 'Global_Objects/SIMD/fromInt8x16Bits',
  'SIMD.Uint32x4.fromUint16x8Bits()': 'Global_Objects/SIMD/fromUint16x8Bits',
  'SIMD.Uint32x4.fromUint8x16Bits()': 'Global_Objects/SIMD/fromUint8x16Bits',
  'SIMD.Uint32x4.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.Uint32x4.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.Uint32x4.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.Uint32x4.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'SIMD.Uint8x16.check()': 'Global_Objects/SIMD/check',
  'SIMD.Uint8x16.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.Uint8x16.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.Uint8x16.load()': 'Global_Objects/SIMD/load',
  'SIMD.Uint8x16.store()': 'Global_Objects/SIMD/store',
  'SIMD.Uint8x16.add()': 'Global_Objects/SIMD/add',
  'SIMD.Uint8x16.addSaturate()': 'Global_Objects/SIMD/addSaturate',
  'SIMD.Uint8x16.mul()': 'Global_Objects/SIMD/mul',
  'SIMD.Uint8x16.neg()': 'Global_Objects/SIMD/neg',
  'SIMD.Uint8x16.sub()': 'Global_Objects/SIMD/sub',
  'SIMD.Uint8x16.subSaturate()': 'Global_Objects/SIMD/subSaturate',
  'SIMD.Uint8x16.shuffle()': 'Global_Objects/SIMD/shuffle',
  'SIMD.Uint8x16.swizzle()': 'Global_Objects/SIMD/swizzle',
  'SIMD.Uint8x16.select()': 'Global_Objects/SIMD/select',
  'SIMD.Uint8x16.equal()': 'Global_Objects/SIMD/equal',
  'SIMD.Uint8x16.notEqual()': 'Global_Objects/SIMD/notEqual',
  'SIMD.Uint8x16.lessThan()': 'Global_Objects/SIMD/lessThan',
  'SIMD.Uint8x16.lessThanOrEqual()': 'Global_Objects/SIMD/lessThanOrEqual',
  'SIMD.Uint8x16.greaterThan()': 'Global_Objects/SIMD/greaterThan',
  'SIMD.Uint8x16.greaterThanOrEqual()':
    'Global_Objects/SIMD/greaterThanOrEqual',
  'SIMD.Uint8x16.and()': 'Global_Objects/SIMD/and',
  'SIMD.Uint8x16.or()': 'Global_Objects/SIMD/or',
  'SIMD.Uint8x16.xor()': 'Global_Objects/SIMD/xor',
  'SIMD.Uint8x16.not()': 'Global_Objects/SIMD/not',
  'SIMD.Uint8x16.shiftLeftByScalar()': 'Global_Objects/SIMD/shiftLeftByScalar',
  'SIMD.Uint8x16.shiftRightByScalar()':
    'Global_Objects/SIMD/shiftRightByScalar',
  'SIMD.Uint8x16.fromFloat32x4Bits()': 'Global_Objects/SIMD/fromFloat32x4Bits',
  'SIMD.Uint8x16.fromFloat64x2Bits()': 'Global_Objects/SIMD/fromFloat64x2Bits',
  'SIMD.Uint8x16.fromInt32x4Bits()': 'Global_Objects/SIMD/fromInt32x4Bits',
  'SIMD.Uint8x16.fromInt16x8Bits()': 'Global_Objects/SIMD/fromInt16x8Bits',
  'SIMD.Uint8x16.fromInt8x16Bits()': 'Global_Objects/SIMD/fromInt8x16Bits',
  'SIMD.Uint8x16.fromUint32x4Bits()': 'Global_Objects/SIMD/fromUint32x4Bits',
  'SIMD.Uint8x16.fromUint16x8Bits()': 'Global_Objects/SIMD/fromUint16x8Bits',
  'SIMD.Uint8x16.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.Uint8x16.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.Uint8x16.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.Uint8x16.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'get Set[@@species]': 'Global_Objects/Set/@@species',
  'Set.prototype': 'Global_Objects/Set/prototype',
  'Set.prototype.size': 'Global_Objects/Set/size',
  'Set.prototype.add(value)': 'Global_Objects/Set/add',
  'Set.prototype.clear()': 'Global_Objects/Set/clear',
  'Set.prototype.delete(value)': 'Global_Objects/Set/delete',
  'Set.prototype.entries()': 'Global_Objects/Set/entries',
  'Set.prototype.forEach(callbackFn[, thisArg])': 'Global_Objects/Set/forEach',
  'Set.prototype.has(value)': 'Global_Objects/Set/has',
  'Set.prototype.keys()': 'Global_Objects/Set/keys',
  'Set.prototype.values()': 'Global_Objects/Set/values',
  'Set.prototype[@@iterator]()': 'Global_Objects/Set/@@iterator',
  'SIMD.Uint16x8.splat()': 'Global_Objects/SIMD/splat',
  'SIMD.Uint16x8.check()': 'Global_Objects/SIMD/check',
  'SIMD.Uint16x8.extractLane()': 'Global_Objects/SIMD/extractLane',
  'SIMD.Uint16x8.replaceLane()': 'Global_Objects/SIMD/replaceLane',
  'SIMD.Uint16x8.load()': 'Global_Objects/SIMD/load',
  'SIMD.Uint16x8.store()': 'Global_Objects/SIMD/store',
  'SIMD.Uint16x8.add()': 'Global_Objects/SIMD/add',
  'SIMD.Uint16x8.addSaturate()': 'Global_Objects/SIMD/addSaturate',
  'SIMD.Uint16x8.mul()': 'Global_Objects/SIMD/mul',
  'SIMD.Uint16x8.neg()': 'Global_Objects/SIMD/neg',
  'SIMD.Uint16x8.sub()': 'Global_Objects/SIMD/sub',
  'SIMD.Uint16x8.subSaturate()': 'Global_Objects/SIMD/subSaturate',
  'SIMD.Uint16x8.shuffle()': 'Global_Objects/SIMD/shuffle',
  'SIMD.Uint16x8.swizzle()': 'Global_Objects/SIMD/swizzle',
  'SIMD.Uint16x8.select()': 'Global_Objects/SIMD/select',
  'SIMD.Uint16x8.equal()': 'Global_Objects/SIMD/equal',
  'SIMD.Uint16x8.notEqual()': 'Global_Objects/SIMD/notEqual',
  'SIMD.Uint16x8.lessThan()': 'Global_Objects/SIMD/lessThan',
  'SIMD.Uint16x8.lessThanOrEqual()': 'Global_Objects/SIMD/lessThanOrEqual',
  'SIMD.Uint16x8.greaterThan()': 'Global_Objects/SIMD/greaterThan',
  'SIMD.Uint16x8.greaterThanOrEqual()':
    'Global_Objects/SIMD/greaterThanOrEqual',
  'SIMD.Uint16x8.and()': 'Global_Objects/SIMD/and',
  'SIMD.Uint16x8.or()': 'Global_Objects/SIMD/or',
  'SIMD.Uint16x8.xor()': 'Global_Objects/SIMD/xor',
  'SIMD.Uint16x8.not()': 'Global_Objects/SIMD/not',
  'SIMD.Uint16x8.shiftLeftByScalar()': 'Global_Objects/SIMD/shiftLeftByScalar',
  'SIMD.Uint16x8.shiftRightByScalar()':
    'Global_Objects/SIMD/shiftRightByScalar',
  'SIMD.Uint16x8.fromFloat32x4Bits()': 'Global_Objects/SIMD/fromFloat32x4Bits',
  'SIMD.Uint16x8.fromFloat64x2Bits()': 'Global_Objects/SIMD/fromFloat64x2Bits',
  'SIMD.Uint16x8.fromInt32x4Bits()': 'Global_Objects/SIMD/fromInt32x4Bits',
  'SIMD.Uint16x8.fromInt16x8Bits()': 'Global_Objects/SIMD/fromInt16x8Bits',
  'SIMD.Uint16x8.fromInt8x16Bits()': 'Global_Objects/SIMD/fromInt8x16Bits',
  'SIMD.Uint16x8.fromUint32x4Bits()': 'Global_Objects/SIMD/fromUint32x4Bits',
  'SIMD.Uint16x8.fromUint8x16Bits()': 'Global_Objects/SIMD/fromUint8x16Bits',
  'SIMD.Uint16x8.prototype.toLocaleString()':
    'Global_Objects/SIMD/toLocaleString',
  'SIMD.Uint16x8.prototype.toString()': 'Global_Objects/SIMD/toString',
  'SIMD.Uint16x8.prototype.valueOf()': 'Global_Objects/SIMD/valueOf',
  'SIMD.Uint16x8.prototype.toSource()': 'Global_Objects/SIMD/toSource',
  'SyntaxError.prototype': 'Global_Objects/SyntaxError/prototype',
  'SyntaxError.prototype.message': 'Global_Objects/Error/message',
  'SyntaxError.prototype.name': 'Global_Objects/Error/name',
  'SyntaxError.prototype.fileName': 'Global_Objects/Error/fileName',
  'SyntaxError.prototype.lineNumber': 'Global_Objects/Error/lineNumber',
  'SyntaxError.prototype.columnNumber': 'Global_Objects/Error/columnNumber',
  'SyntaxError.prototype.stack': 'Global_Objects/Error/stack',
  'SharedArrayBuffer.prototype': 'Global_Objects/SharedArrayBuffer/prototype',
  'SharedArrayBuffer.prototype.byteLength':
    'Global_Objects/SharedArrayBuffer/byteLength',
  'SharedArrayBuffer.prototype.slice(begin, end)':
    'Global_Objects/SharedArrayBuffer/slice',
  'String.prototype': 'Global_Objects/String/prototype',
  'String.fromCharCode()': 'Global_Objects/String/fromCharCode',
  'String.fromCodePoint()': 'Global_Objects/String/fromCodePoint',
  'String.raw()': 'Global_Objects/String/raw',
  'String.prototype.length': 'Global_Objects/String/length',
  'String.prototype.charAt()': 'Global_Objects/String/charAt',
  'String.prototype.charCodeAt()': 'Global_Objects/String/charCodeAt',
  'String.prototype.codePointAt()': 'Global_Objects/String/codePointAt',
  'String.prototype.concat()': 'Global_Objects/String/concat',
  'String.prototype.includes()': 'Global_Objects/String/includes',
  'String.prototype.endsWith()': 'Global_Objects/String/endsWith',
  'String.prototype.indexOf()': 'Global_Objects/String/indexOf',
  'String.prototype.lastIndexOf()': 'Global_Objects/String/lastIndexOf',
  'String.prototype.localeCompare()': 'Global_Objects/String/localeCompare',
  'String.prototype.match()': 'Global_Objects/String/match',
  'String.prototype.normalize()': 'Global_Objects/String/normalize',
  'String.prototype.padEnd()': 'Global_Objects/String/padEnd',
  'String.prototype.padStart()': 'Global_Objects/String/padStart',
  'String.prototype.quote()': 'Global_Objects/String/quote',
  'String.prototype.repeat()': 'Global_Objects/String/repeat',
  'String.prototype.replace()': 'Global_Objects/String/replace',
  'String.prototype.search()': 'Global_Objects/String/search',
  'String.prototype.slice()': 'Global_Objects/String/slice',
  'String.prototype.split()': 'Global_Objects/String/split',
  'String.prototype.startsWith()': 'Global_Objects/String/startsWith',
  'String.prototype.substr()': 'Global_Objects/String/substr',
  'String.prototype.substring()': 'Global_Objects/String/substring',
  'String.prototype.toLocaleLowerCase()':
    'Global_Objects/String/toLocaleLowerCase',
  'String.prototype.toLocaleUpperCase()':
    'Global_Objects/String/toLocaleUpperCase',
  'String.prototype.toLowerCase()': 'Global_Objects/String/toLowerCase',
  'String.prototype.toSource()': 'Global_Objects/String/toSource',
  'String.prototype.toString()': 'Global_Objects/String/toString',
  'String.prototype.toUpperCase()': 'Global_Objects/String/toUpperCase',
  'String.prototype.trim()': 'Global_Objects/String/trim',
  'String.prototype.trimLeft()': 'Global_Objects/String/trimLeft',
  'String.prototype.trimRight()': 'Global_Objects/String/trimRight',
  'String.prototype.valueOf()': 'Global_Objects/String/valueOf',
  'String.prototype[@@iterator]()': 'Global_Objects/String/@@iterator',
  'String.prototype.anchor()': 'Global_Objects/String/anchor',
  'String.prototype.big()': 'Global_Objects/String/big',
  'String.prototype.blink()': 'Global_Objects/String/blink',
  'String.prototype.bold()': 'Global_Objects/String/bold',
  'String.prototype.fixed()': 'Global_Objects/String/fixed',
  'String.prototype.fontcolor()': 'Global_Objects/String/fontcolor',
  'String.prototype.fontsize()': 'Global_Objects/String/fontsize',
  'String.prototype.italics()': 'Global_Objects/String/italics',
  'String.prototype.link()': 'Global_Objects/String/link',
  'String.prototype.small()': 'Global_Objects/String/small',
  'String.prototype.strike()': 'Global_Objects/String/strike',
  'String.prototype.sub()': 'Global_Objects/String/sub',
  'String.prototype.sup()': 'Global_Objects/String/sup',
  'Symbol.prototype': 'Global_Objects/Symbol/prototype',
  'Symbol.iterator': 'Global_Objects/Symbol/iterator',
  'Symbol.asyncIterator': 'Global_Objects/Symbol/asyncIterator',
  'Symbol.match': 'Global_Objects/Symbol/match',
  'Symbol.replace': 'Global_Objects/Symbol/replace',
  'Symbol.search': 'Global_Objects/Symbol/search',
  'Symbol.split': 'Global_Objects/Symbol/split',
  'Symbol.hasInstance': 'Global_Objects/Symbol/hasInstance',
  'Symbol.isConcatSpreadable': 'Global_Objects/Symbol/isConcatSpreadable',
  'Symbol.unscopables': 'Global_Objects/Symbol/unscopables',
  'Symbol.species': 'Global_Objects/Symbol/species',
  'Symbol.toPrimitive': 'Global_Objects/Symbol/toPrimitive',
  'Symbol.toStringTag': 'Global_Objects/Symbol/toStringTag',
  'Symbol.for(key)': 'Global_Objects/Symbol/for',
  'Symbol.keyFor(sym)': 'Global_Objects/Symbol/keyFor',
  'Symbol.prototype.toSource()': 'Global_Objects/Symbol/toSource',
  'Symbol.prototype.toString()': 'Global_Objects/Symbol/toString',
  'Symbol.prototype.valueOf()': 'Global_Objects/Symbol/valueOf',
  'Symbol.prototype[@@toPrimitive]': 'Global_Objects/Symbol/@@toPrimitive',
  'TypeError.prototype': 'Global_Objects/TypeError/prototype',
  'TypeError.prototype.message': 'Global_Objects/Error/message',
  'TypeError.prototype.name': 'Global_Objects/Error/name',
  'TypeError.prototype.fileName': 'Global_Objects/Error/fileName',
  'TypeError.prototype.lineNumber': 'Global_Objects/Error/lineNumber',
  'TypeError.prototype.columnNumber': 'Global_Objects/Error/columnNumber',
  'TypeError.prototype.stack': 'Global_Objects/Error/stack',
  'URIError.prototype': 'Global_Objects/URIError/prototype',
  'URIError.prototype.message': 'Global_Objects/Error/message',
  'URIError.prototype.name': 'Global_Objects/Error/name',
  'URIError.prototype.fileName': 'Global_Objects/Error/fileName',
  'URIError.prototype.lineNumber': 'Global_Objects/Error/lineNumber',
  'URIError.prototype.columnNumber': 'Global_Objects/Error/columnNumber',
  'URIError.prototype.stack': 'Global_Objects/Error/stack',
  'TypedArray.BYTES_PER_ELEMENT': 'Global_Objects/TypedArray/BYTES_PER_ELEMENT',
  'TypedArray.name': 'Global_Objects/TypedArray/name',
  'get TypedArray[@@species]': 'Global_Objects/TypedArray/@@species',
  'TypedArray.prototype': 'Global_Objects/TypedArray/prototype',
  'TypedArray.from()': 'Global_Objects/TypedArray/from',
  'TypedArray.of()': 'Global_Objects/TypedArray/of',
  'TypedArray.prototype.buffer': 'Global_Objects/TypedArray/buffer',
  'TypedArray.prototype.byteLength': 'Global_Objects/TypedArray/byteLength',
  'TypedArray.prototype.byteOffset': 'Global_Objects/TypedArray/byteOffset',
  'TypedArray.prototype.length': 'Global_Objects/TypedArray/length',
  'TypedArray.prototype.copyWithin()': 'Global_Objects/TypedArray/copyWithin',
  'TypedArray.prototype.entries()': 'Global_Objects/TypedArray/entries',
  'TypedArray.prototype.every()': 'Global_Objects/TypedArray/every',
  'TypedArray.prototype.fill()': 'Global_Objects/TypedArray/fill',
  'TypedArray.prototype.filter()': 'Global_Objects/TypedArray/filter',
  'TypedArray.prototype.find()': 'Global_Objects/TypedArray/find',
  'TypedArray.prototype.findIndex()': 'Global_Objects/TypedArray/findIndex',
  'TypedArray.prototype.forEach()': 'Global_Objects/TypedArray/forEach',
  'TypedArray.prototype.includes()': 'Global_Objects/TypedArray/includes',
  'TypedArray.prototype.indexOf()': 'Global_Objects/TypedArray/indexOf',
  'TypedArray.prototype.join()': 'Global_Objects/TypedArray/join',
  'TypedArray.prototype.keys()': 'Global_Objects/TypedArray/keys',
  'TypedArray.prototype.lastIndexOf()': 'Global_Objects/TypedArray/lastIndexOf',
  'TypedArray.prototype.map()': 'Global_Objects/TypedArray/map',
  'TypedArray.prototype.move()': 'Global_Objects/TypedArray/move',
  'TypedArray.prototype.reduce()': 'Global_Objects/TypedArray/reduce',
  'TypedArray.prototype.reduceRight()': 'Global_Objects/TypedArray/reduceRight',
  'TypedArray.prototype.reverse()': 'Global_Objects/TypedArray/reverse',
  'TypedArray.prototype.set()': 'Global_Objects/TypedArray/set',
  'TypedArray.prototype.slice()': 'Global_Objects/TypedArray/slice',
  'TypedArray.prototype.some()': 'Global_Objects/TypedArray/some',
  'TypedArray.prototype.sort()': 'Global_Objects/TypedArray/sort',
  'TypedArray.prototype.subarray()': 'Global_Objects/TypedArray/subarray',
  'TypedArray.prototype.values()': 'Global_Objects/TypedArray/values',
  'TypedArray.prototype.toLocaleString()':
    'Global_Objects/TypedArray/toLocaleString',
  'TypedArray.prototype.toString()': 'Global_Objects/TypedArray/toString',
  'TypedArray.prototype[@@iterator]()': 'Global_Objects/TypedArray/@@iterator',
  'WeakSet.prototype': 'Global_Objects/WeakSet/prototype',
  'WeakSet.prototype.add(value)': 'Global_Objects/WeakSet/add',
  'WeakSet.prototype.delete(value)': 'Global_Objects/WeakSet/delete',
  'WeakSet.prototype.has(value)': 'Global_Objects/WeakSet/has',
  'WeakSet.prototype.clear()': 'Global_Objects/WeakSet/clear',
  'Uint16Array.BYTES_PER_ELEMENT':
    'Global_Objects/TypedArray/BYTES_PER_ELEMENT',
  'Uint16Array.name': 'Global_Objects/TypedArray/name',
  'Uint16Array.prototype': 'Global_Objects/TypedArray/prototype',
  'Uint16Array.from()': 'Global_Objects/TypedArray/from',
  'Uint16Array.of()': 'Global_Objects/TypedArray/of',
  'Uint16Array.prototype.buffer': 'Global_Objects/TypedArray/buffer',
  'Uint16Array.prototype.byteLength': 'Global_Objects/TypedArray/byteLength',
  'Uint16Array.prototype.byteOffset': 'Global_Objects/TypedArray/byteOffset',
  'Uint16Array.prototype.length': 'Global_Objects/TypedArray/length',
  'Uint16Array.prototype.copyWithin()': 'Global_Objects/TypedArray/copyWithin',
  'Uint16Array.prototype.entries()': 'Global_Objects/TypedArray/entries',
  'Uint16Array.prototype.every()': 'Global_Objects/TypedArray/every',
  'Uint16Array.prototype.fill()': 'Global_Objects/TypedArray/fill',
  'Uint16Array.prototype.filter()': 'Global_Objects/TypedArray/filter',
  'Uint16Array.prototype.find()': 'Global_Objects/TypedArray/find',
  'Uint16Array.prototype.findIndex()': 'Global_Objects/TypedArray/findIndex',
  'Uint16Array.prototype.forEach()': 'Global_Objects/TypedArray/forEach',
  'Uint16Array.prototype.includes()': 'Global_Objects/TypedArray/includes',
  'Uint16Array.prototype.indexOf()': 'Global_Objects/TypedArray/indexOf',
  'Uint16Array.prototype.join()': 'Global_Objects/TypedArray/join',
  'Uint16Array.prototype.keys()': 'Global_Objects/TypedArray/keys',
  'Uint16Array.prototype.lastIndexOf()':
    'Global_Objects/TypedArray/lastIndexOf',
  'Uint16Array.prototype.map()': 'Global_Objects/TypedArray/map',
  'Uint16Array.prototype.move()': 'Global_Objects/TypedArray/move',
  'Uint16Array.prototype.reduce()': 'Global_Objects/TypedArray/reduce',
  'Uint16Array.prototype.reduceRight()':
    'Global_Objects/TypedArray/reduceRight',
  'Uint16Array.prototype.reverse()': 'Global_Objects/TypedArray/reverse',
  'Uint16Array.prototype.set()': 'Global_Objects/TypedArray/set',
  'Uint16Array.prototype.slice()': 'Global_Objects/TypedArray/slice',
  'Uint16Array.prototype.some()': 'Global_Objects/TypedArray/some',
  'Uint16Array.prototype.sort()': 'Global_Objects/TypedArray/sort',
  'Uint16Array.prototype.subarray()': 'Global_Objects/TypedArray/subarray',
  'Uint16Array.prototype.values()': 'Global_Objects/TypedArray/values',
  'Uint16Array.prototype.toLocaleString()':
    'Global_Objects/TypedArray/toLocaleString',
  'Uint16Array.prototype.toString()': 'Global_Objects/TypedArray/toString',
  'Uint16Array.prototype[@@iterator]()': 'Global_Objects/TypedArray/@@iterator',
  'WebAssembly.instantiate()': 'Global_Objects/WebAssembly/instantiate',
  'WebAssembly.compile()': 'Global_Objects/WebAssembly/compile',
  'WebAssembly.validate()': 'Global_Objects/WebAssembly/validate',
  'WebAssembly.Module()': 'Global_Objects/WebAssembly/Module',
  'WebAssembly.Instance()': 'Global_Objects/WebAssembly/Instance',
  'WebAssembly.Memory()': 'Global_Objects/WebAssembly/Memory',
  'WebAssembly.Table()': 'Global_Objects/WebAssembly/Table',
  'WebAssembly.CompileError()': 'Global_Objects/WebAssembly/CompileError',
  'WebAssembly.LinkError()': 'Global_Objects/WebAssembly/LinkError',
  'WebAssembly.RuntimeError()': 'Global_Objects/WebAssembly/RuntimeError',
  'Uint8Array.BYTES_PER_ELEMENT': 'Global_Objects/TypedArray/BYTES_PER_ELEMENT',
  'Uint8Array.name': 'Global_Objects/TypedArray/name',
  'Uint8Array.prototype': 'Global_Objects/TypedArray/prototype',
  'Uint8Array.from()': 'Global_Objects/TypedArray/from',
  'Uint8Array.of()': 'Global_Objects/TypedArray/of',
  'Uint8Array.prototype.buffer': 'Global_Objects/TypedArray/buffer',
  'Uint8Array.prototype.byteLength': 'Global_Objects/TypedArray/byteLength',
  'Uint8Array.prototype.byteOffset': 'Global_Objects/TypedArray/byteOffset',
  'Uint8Array.prototype.length': 'Global_Objects/TypedArray/length',
  'Uint8Array.prototype.copyWithin()': 'Global_Objects/TypedArray/copyWithin',
  'Uint8Array.prototype.entries()': 'Global_Objects/TypedArray/entries',
  'Uint8Array.prototype.every()': 'Global_Objects/TypedArray/every',
  'Uint8Array.prototype.fill()': 'Global_Objects/TypedArray/fill',
  'Uint8Array.prototype.filter()': 'Global_Objects/TypedArray/filter',
  'Uint8Array.prototype.find()': 'Global_Objects/TypedArray/find',
  'Uint8Array.prototype.findIndex()': 'Global_Objects/TypedArray/findIndex',
  'Uint8Array.prototype.forEach()': 'Global_Objects/TypedArray/forEach',
  'Uint8Array.prototype.includes()': 'Global_Objects/TypedArray/includes',
  'Uint8Array.prototype.indexOf()': 'Global_Objects/TypedArray/indexOf',
  'Uint8Array.prototype.join()': 'Global_Objects/TypedArray/join',
  'Uint8Array.prototype.keys()': 'Global_Objects/TypedArray/keys',
  'Uint8Array.prototype.lastIndexOf()': 'Global_Objects/TypedArray/lastIndexOf',
  'Uint8Array.prototype.map()': 'Global_Objects/TypedArray/map',
  'Uint8Array.prototype.move()': 'Global_Objects/TypedArray/move',
  'Uint8Array.prototype.reduce()': 'Global_Objects/TypedArray/reduce',
  'Uint8Array.prototype.reduceRight()': 'Global_Objects/TypedArray/reduceRight',
  'Uint8Array.prototype.reverse()': 'Global_Objects/TypedArray/reverse',
  'Uint8Array.prototype.set()': 'Global_Objects/TypedArray/set',
  'Uint8Array.prototype.slice()': 'Global_Objects/TypedArray/slice',
  'Uint8Array.prototype.some()': 'Global_Objects/TypedArray/some',
  'Uint8Array.prototype.sort()': 'Global_Objects/TypedArray/sort',
  'Uint8Array.prototype.subarray()': 'Global_Objects/TypedArray/subarray',
  'Uint8Array.prototype.values()': 'Global_Objects/TypedArray/values',
  'Uint8Array.prototype.toLocaleString()':
    'Global_Objects/TypedArray/toLocaleString',
  'Uint8Array.prototype.toString()': 'Global_Objects/TypedArray/toString',
  'Uint8Array.prototype[@@iterator]()': 'Global_Objects/TypedArray/@@iterator',
  'Uint8ClampedArray.BYTES_PER_ELEMENT':
    'Global_Objects/TypedArray/BYTES_PER_ELEMENT',
  'Uint8ClampedArray.name': 'Global_Objects/TypedArray/name',
  'Uint8ClampedArray.prototype': 'Global_Objects/TypedArray/prototype',
  'Uint8ClampedArray.from()': 'Global_Objects/TypedArray/from',
  'Uint8ClampedArray.of()': 'Global_Objects/TypedArray/of',
  'Uint8ClampedArray.prototype.buffer': 'Global_Objects/TypedArray/buffer',
  'Uint8ClampedArray.prototype.byteLength':
    'Global_Objects/TypedArray/byteLength',
  'Uint8ClampedArray.prototype.byteOffset':
    'Global_Objects/TypedArray/byteOffset',
  'Uint8ClampedArray.prototype.length': 'Global_Objects/TypedArray/length',
  'Uint8ClampedArray.prototype.copyWithin()':
    'Global_Objects/TypedArray/copyWithin',
  'Uint8ClampedArray.prototype.entries()': 'Global_Objects/TypedArray/entries',
  'Uint8ClampedArray.prototype.every()': 'Global_Objects/TypedArray/every',
  'Uint8ClampedArray.prototype.fill()': 'Global_Objects/TypedArray/fill',
  'Uint8ClampedArray.prototype.filter()': 'Global_Objects/TypedArray/filter',
  'Uint8ClampedArray.prototype.find()': 'Global_Objects/TypedArray/find',
  'Uint8ClampedArray.prototype.findIndex()':
    'Global_Objects/TypedArray/findIndex',
  'Uint8ClampedArray.prototype.forEach()': 'Global_Objects/TypedArray/forEach',
  'Uint8ClampedArray.prototype.includes()':
    'Global_Objects/TypedArray/includes',
  'Uint8ClampedArray.prototype.indexOf()': 'Global_Objects/TypedArray/indexOf',
  'Uint8ClampedArray.prototype.join()': 'Global_Objects/TypedArray/join',
  'Uint8ClampedArray.prototype.keys()': 'Global_Objects/TypedArray/keys',
  'Uint8ClampedArray.prototype.lastIndexOf()':
    'Global_Objects/TypedArray/lastIndexOf',
  'Uint8ClampedArray.prototype.map()': 'Global_Objects/TypedArray/map',
  'Uint8ClampedArray.prototype.move()': 'Global_Objects/TypedArray/move',
  'Uint8ClampedArray.prototype.reduce()': 'Global_Objects/TypedArray/reduce',
  'Uint8ClampedArray.prototype.reduceRight()':
    'Global_Objects/TypedArray/reduceRight',
  'Uint8ClampedArray.prototype.reverse()': 'Global_Objects/TypedArray/reverse',
  'Uint8ClampedArray.prototype.set()': 'Global_Objects/TypedArray/set',
  'Uint8ClampedArray.prototype.slice()': 'Global_Objects/TypedArray/slice',
  'Uint8ClampedArray.prototype.some()': 'Global_Objects/TypedArray/some',
  'Uint8ClampedArray.prototype.sort()': 'Global_Objects/TypedArray/sort',
  'Uint8ClampedArray.prototype.subarray()':
    'Global_Objects/TypedArray/subarray',
  'Uint8ClampedArray.prototype.values()': 'Global_Objects/TypedArray/values',
  'Uint8ClampedArray.prototype.toLocaleString()':
    'Global_Objects/TypedArray/toLocaleString',
  'Uint8ClampedArray.prototype.toString()':
    'Global_Objects/TypedArray/toString',
  'Uint8ClampedArray.prototype[@@iterator]()':
    'Global_Objects/TypedArray/@@iterator',
  'Uint32Array.BYTES_PER_ELEMENT':
    'Global_Objects/TypedArray/BYTES_PER_ELEMENT',
  'Uint32Array.name': 'Global_Objects/TypedArray/name',
  'Uint32Array.prototype': 'Global_Objects/TypedArray/prototype',
  'Uint32Array.from()': 'Global_Objects/TypedArray/from',
  'Uint32Array.of()': 'Global_Objects/TypedArray/of',
  'Uint32Array.prototype.buffer': 'Global_Objects/TypedArray/buffer',
  'Uint32Array.prototype.byteLength': 'Global_Objects/TypedArray/byteLength',
  'Uint32Array.prototype.byteOffset': 'Global_Objects/TypedArray/byteOffset',
  'Uint32Array.prototype.length': 'Global_Objects/TypedArray/length',
  'Uint32Array.prototype.copyWithin()': 'Global_Objects/TypedArray/copyWithin',
  'Uint32Array.prototype.entries()': 'Global_Objects/TypedArray/entries',
  'Uint32Array.prototype.every()': 'Global_Objects/TypedArray/every',
  'Uint32Array.prototype.fill()': 'Global_Objects/TypedArray/fill',
  'Uint32Array.prototype.filter()': 'Global_Objects/TypedArray/filter',
  'Uint32Array.prototype.find()': 'Global_Objects/TypedArray/find',
  'Uint32Array.prototype.findIndex()': 'Global_Objects/TypedArray/findIndex',
  'Uint32Array.prototype.forEach()': 'Global_Objects/TypedArray/forEach',
  'Uint32Array.prototype.includes()': 'Global_Objects/TypedArray/includes',
  'Uint32Array.prototype.indexOf()': 'Global_Objects/TypedArray/indexOf',
  'Uint32Array.prototype.join()': 'Global_Objects/TypedArray/join',
  'Uint32Array.prototype.keys()': 'Global_Objects/TypedArray/keys',
  'Uint32Array.prototype.lastIndexOf()':
    'Global_Objects/TypedArray/lastIndexOf',
  'Uint32Array.prototype.map()': 'Global_Objects/TypedArray/map',
  'Uint32Array.prototype.move()': 'Global_Objects/TypedArray/move',
  'Uint32Array.prototype.reduce()': 'Global_Objects/TypedArray/reduce',
  'Uint32Array.prototype.reduceRight()':
    'Global_Objects/TypedArray/reduceRight',
  'Uint32Array.prototype.reverse()': 'Global_Objects/TypedArray/reverse',
  'Uint32Array.prototype.set()': 'Global_Objects/TypedArray/set',
  'Uint32Array.prototype.slice()': 'Global_Objects/TypedArray/slice',
  'Uint32Array.prototype.some()': 'Global_Objects/TypedArray/some',
  'Uint32Array.prototype.sort()': 'Global_Objects/TypedArray/sort',
  'Uint32Array.prototype.subarray()': 'Global_Objects/TypedArray/subarray',
  'Uint32Array.prototype.values()': 'Global_Objects/TypedArray/values',
  'Uint32Array.prototype.toLocaleString()':
    'Global_Objects/TypedArray/toLocaleString',
  'Uint32Array.prototype.toString()': 'Global_Objects/TypedArray/toString',
  'Uint32Array.prototype[@@iterator]()': 'Global_Objects/TypedArray/@@iterator',
  'WeakMap.prototype': 'Global_Objects/WeakMap/prototype',
  'WeakMap.prototype.delete(key)': 'Global_Objects/WeakMap/delete',
  'WeakMap.prototype.get(key)': 'Global_Objects/WeakMap/get',
  'WeakMap.prototype.has(key)': 'Global_Objects/WeakMap/has',
  'WeakMap.prototype.set(key, value)': 'Global_Objects/WeakMap/set',
  'WeakMap.prototype.clear()': 'Global_Objects/WeakMap/clear'
};

export default javascriptMDN;
